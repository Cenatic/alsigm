package es.ieci.scsp.verifdata.model.mapping.scsp;

// Generated 06-mar-2012 7:54:31 by Hibernate Tools 3.3.0.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * CoreTokenData generated by hbm2java
 */
@Entity
@Table(name = "core_token_data")
public class CoreTokenData implements java.io.Serializable {

	private CoreTokenDataId id;
	private CorePeticionRespuesta corePeticionRespuesta;
	private CoreTipoMensaje coreTipoMensaje;
	private String datos;
	private String clave;
	private String modoencriptacion;
	private String algoritmoEncriptacion;

	public CoreTokenData() {
	}

	public CoreTokenData(CoreTokenDataId id,
			CorePeticionRespuesta corePeticionRespuesta,
			CoreTipoMensaje coreTipoMensaje, String datos) {
		this.id = id;
		this.corePeticionRespuesta = corePeticionRespuesta;
		this.coreTipoMensaje = coreTipoMensaje;
		this.datos = datos;
	}

	public CoreTokenData(CoreTokenDataId id,
			CorePeticionRespuesta corePeticionRespuesta,
			CoreTipoMensaje coreTipoMensaje, String datos, String clave,
			String modoencriptacion, String algoritmoEncriptacion) {
		this.id = id;
		this.corePeticionRespuesta = corePeticionRespuesta;
		this.coreTipoMensaje = coreTipoMensaje;
		this.datos = datos;
		this.clave = clave;
		this.modoencriptacion = modoencriptacion;
		this.algoritmoEncriptacion = algoritmoEncriptacion;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "idpeticion", column = @Column(name = "idpeticion", nullable = false, length = 26)),
			@AttributeOverride(name = "tipomensaje", column = @Column(name = "tipomensaje", nullable = false)) })
	public CoreTokenDataId getId() {
		return this.id;
	}

	public void setId(CoreTokenDataId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idpeticion", nullable = false, insertable = false, updatable = false)
	public CorePeticionRespuesta getCorePeticionRespuesta() {
		return this.corePeticionRespuesta;
	}

	public void setCorePeticionRespuesta(
			CorePeticionRespuesta corePeticionRespuesta) {
		this.corePeticionRespuesta = corePeticionRespuesta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tipomensaje", nullable = false, insertable = false, updatable = false)
	public CoreTipoMensaje getCoreTipoMensaje() {
		return this.coreTipoMensaje;
	}

	public void setCoreTipoMensaje(CoreTipoMensaje coreTipoMensaje) {
		this.coreTipoMensaje = coreTipoMensaje;
	}

	@Column(name = "datos", nullable = false)
	public String getDatos() {
		return this.datos;
	}

	public void setDatos(String datos) {
		this.datos = datos;
	}

	@Column(name = "clave", length = 256)
	public String getClave() {
		return this.clave;
	}

	public void setClave(String clave) {
		this.clave = clave;
	}

	@Column(name = "modoencriptacion", length = 32)
	public String getModoencriptacion() {
		return this.modoencriptacion;
	}

	public void setModoencriptacion(String modoencriptacion) {
		this.modoencriptacion = modoencriptacion;
	}

	@Column(name = "algoritmoEncriptacion", length = 32)
	public String getAlgoritmoEncriptacion() {
		return this.algoritmoEncriptacion;
	}

	public void setAlgoritmoEncriptacion(String algoritmoEncriptacion) {
		this.algoritmoEncriptacion = algoritmoEncriptacion;
	}

}
