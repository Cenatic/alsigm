//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v@@BUILD_VERSION@@ 
// 	See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// 	Any modifications to this file will be lost upon recompilation of the source schema. 
// 	Generated on: 2011.07.04 en 12:38:50 CEST 
//


package org.notariado.ancert.xml.plusvalias.liquidacion.impl;

public class CALCULOLIQUIDACIONTypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
{

    protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType _REPLY;
    protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType _REQUEST;
    public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.class);
    }

    public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType getREPLY() {
        return _REPLY;
    }

    public void setREPLY(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType value) {
        _REPLY = value;
    }

    public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType getREQUEST() {
        return _REQUEST;
    }

    public void setREQUEST(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType value) {
        _REQUEST = value;
    }

    public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
        return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if ((_REQUEST!= null)&&(_REPLY == null)) {
            context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "REQUEST");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _REQUEST), "REQUEST");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _REQUEST), "REQUEST");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _REQUEST), "REQUEST");
            context.endElement();
        } else {
            if ((_REQUEST == null)&&(_REPLY!= null)) {
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "REPLY");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _REPLY), "REPLY");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _REPLY), "REPLY");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _REPLY), "REPLY");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPatter"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr"
+"\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclar"
+"edAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u0006pp\u0000sq\u0000~\u0000\u0000ppsr\u0000 com."
+"sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.gramm"
+"ar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000Rorg"
+".notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDAC"
+"IONType.REQUESTTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-ele"
+"mentssq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002"
+"L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.m"
+"sv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype"
+".xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xs"
+"d.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSData"
+"typeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwh"
+"iteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt"
+"\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.da"
+"tatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.su"
+"n.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.s"
+"un.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000/q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\u0007REQUESTt\u00006ht"
+"tp://ancert.notariado.org/XML/Plusvalias/Liquidacionsq\u0000~\u0000\u0006pp"
+"\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0006pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012psq\u0000~\u0000\u0013q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001a"
+"q\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000Porg.notariado.ancert.xml.plusvalias.liquidacio"
+"n.CALCULOLIQUIDACIONType.REPLYTypeq\u0000~\u0000!sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012pq"
+"\u0000~\u0000\'q\u0000~\u00007q\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\u0005REPLYq\u0000~\u0000<sr\u0000\"com.sun.msv.grammar.Exp"
+"ressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Exp"
+"ressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionP"
+"ool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000"
+"$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\t\u0001pq\u0000~\u0000\rq\u0000~\u0000@q\u0000~\u0000\u000b"
+"q\u0000~\u0000>q\u0000~\u0000\u0005q\u0000~\u0000\"q\u0000~\u0000Eq\u0000~\u0000\u0010q\u0000~\u0000Ax"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class REPLYTypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
    {

        protected org.notariado.ancert.xml.plusvalias.liquidacion.ActoJuridicoType _ACTOJURIDICO;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.NotarioType _NOTARIOAUTORIZANTE;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.ADQUIRENTESType _ADQUIRENTES;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.ProtocoloType _PROTOCOLO;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType _DOCUMENTOS;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.REPRESENTANTESType _REPRESENTANTES;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.RESULTADOType _RESULTADO;
        protected java.lang.String _IMPORTETOTAL;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.INMUEBLEType _INMUEBLE;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.CabeceraType _CABECERA;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.TRANSMITENTESType _TRANSMITENTES;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.NotarioType _NOTARIOTITULAR;
        public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.class);
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.ActoJuridicoType getACTOJURIDICO() {
            return _ACTOJURIDICO;
        }

        public void setACTOJURIDICO(org.notariado.ancert.xml.plusvalias.liquidacion.ActoJuridicoType value) {
            _ACTOJURIDICO = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.NotarioType getNOTARIOAUTORIZANTE() {
            return _NOTARIOAUTORIZANTE;
        }

        public void setNOTARIOAUTORIZANTE(org.notariado.ancert.xml.plusvalias.liquidacion.NotarioType value) {
            _NOTARIOAUTORIZANTE = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.ADQUIRENTESType getADQUIRENTES() {
            return _ADQUIRENTES;
        }

        public void setADQUIRENTES(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.ADQUIRENTESType value) {
            _ADQUIRENTES = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.ProtocoloType getPROTOCOLO() {
            return _PROTOCOLO;
        }

        public void setPROTOCOLO(org.notariado.ancert.xml.plusvalias.liquidacion.ProtocoloType value) {
            _PROTOCOLO = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType getDOCUMENTOS() {
            return _DOCUMENTOS;
        }

        public void setDOCUMENTOS(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType value) {
            _DOCUMENTOS = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.REPRESENTANTESType getREPRESENTANTES() {
            return _REPRESENTANTES;
        }

        public void setREPRESENTANTES(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.REPRESENTANTESType value) {
            _REPRESENTANTES = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.RESULTADOType getRESULTADO() {
            return _RESULTADO;
        }

        public void setRESULTADO(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.RESULTADOType value) {
            _RESULTADO = value;
        }

        public java.lang.String getIMPORTETOTAL() {
            return _IMPORTETOTAL;
        }

        public void setIMPORTETOTAL(java.lang.String value) {
            _IMPORTETOTAL = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.INMUEBLEType getINMUEBLE() {
            return _INMUEBLE;
        }

        public void setINMUEBLE(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.INMUEBLEType value) {
            _INMUEBLE = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.CabeceraType getCABECERA() {
            return _CABECERA;
        }

        public void setCABECERA(org.notariado.ancert.xml.plusvalias.liquidacion.CabeceraType value) {
            _CABECERA = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.TRANSMITENTESType getTRANSMITENTES() {
            return _TRANSMITENTES;
        }

        public void setTRANSMITENTES(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.TRANSMITENTESType value) {
            _TRANSMITENTES = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.NotarioType getNOTARIOTITULAR() {
            return _NOTARIOTITULAR;
        }

        public void setNOTARIOTITULAR(org.notariado.ancert.xml.plusvalias.liquidacion.NotarioType value) {
            _NOTARIOTITULAR = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
            return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "CABECERA");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CABECERA), "CABECERA");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CABECERA), "CABECERA");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _CABECERA), "CABECERA");
            context.endElement();
            if (((((((((_NOTARIOAUTORIZANTE!= null)&&(_INMUEBLE!= null))&&(_TRANSMITENTES!= null))&&(_NOTARIOTITULAR!= null))&&(_DOCUMENTOS!= null))&&(_PROTOCOLO!= null))&&(_ACTOJURIDICO!= null))&&(_ADQUIRENTES!= null))&&(_IMPORTETOTAL!= null)) {
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "NOTARIO_TITULAR");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NOTARIOTITULAR), "NOTARIOTITULAR");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NOTARIOTITULAR), "NOTARIOTITULAR");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _NOTARIOTITULAR), "NOTARIOTITULAR");
                context.endElement();
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "NOTARIO_AUTORIZANTE");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NOTARIOAUTORIZANTE), "NOTARIOAUTORIZANTE");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NOTARIOAUTORIZANTE), "NOTARIOAUTORIZANTE");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _NOTARIOAUTORIZANTE), "NOTARIOAUTORIZANTE");
                context.endElement();
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "PROTOCOLO");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PROTOCOLO), "PROTOCOLO");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PROTOCOLO), "PROTOCOLO");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _PROTOCOLO), "PROTOCOLO");
                context.endElement();
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "ACTO_JURIDICO");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ACTOJURIDICO), "ACTOJURIDICO");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ACTOJURIDICO), "ACTOJURIDICO");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ACTOJURIDICO), "ACTOJURIDICO");
                context.endElement();
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "TRANSMITENTES");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TRANSMITENTES), "TRANSMITENTES");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TRANSMITENTES), "TRANSMITENTES");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _TRANSMITENTES), "TRANSMITENTES");
                context.endElement();
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "ADQUIRENTES");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ADQUIRENTES), "ADQUIRENTES");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ADQUIRENTES), "ADQUIRENTES");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ADQUIRENTES), "ADQUIRENTES");
                context.endElement();
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "INMUEBLE");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _INMUEBLE), "INMUEBLE");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _INMUEBLE), "INMUEBLE");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _INMUEBLE), "INMUEBLE");
                context.endElement();
                if (_REPRESENTANTES!= null) {
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "REPRESENTANTES");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _REPRESENTANTES), "REPRESENTANTES");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _REPRESENTANTES), "REPRESENTANTES");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _REPRESENTANTES), "REPRESENTANTES");
                    context.endElement();
                }
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "IMPORTE_TOTAL");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _IMPORTETOTAL), "IMPORTETOTAL");
                } catch (java.lang.Exception e) {
                    org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "DOCUMENTOS");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DOCUMENTOS), "DOCUMENTOS");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DOCUMENTOS), "DOCUMENTOS");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _DOCUMENTOS), "DOCUMENTOS");
                context.endElement();
            }
            context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "RESULTADO");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RESULTADO), "RESULTADO");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RESULTADO), "RESULTADO");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _RESULTADO), "RESULTADO");
            context.endElement();
        }

        public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000pps"
+"q\u0000~\u0000\u0007pp\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001pp"
+"sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.m"
+"sv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang"
+".Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.Attri"
+"buteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\bxq\u0000~\u0000\u0003q\u0000~\u0000\u0013psr"
+"\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0012\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000co"
+"m.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000~"
+"\u0000\u001at\u0000<org.notariado.ancert.xml.plusvalias.liquidacion.Cabecer"
+"aTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\rpps"
+"q\u0000~\u0000\u0014q\u0000~\u0000\u0013psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000"
+"\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom"
+"/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xs"
+"d.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAt"
+"omicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lco"
+"m/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w"
+"3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.Whi"
+"teSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype"
+".xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar"
+".Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0013psr\u0000\u001bcom."
+"sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamesp"
+"aceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/200"
+"1/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\bCABECERAt\u00006http://ancert.n"
+"otariado.org/XML/Plusvalias/Liquidacionsq\u0000~\u0000\rppsq\u0000~\u0000\u0000q\u0000~\u0000\u0013ps"
+"q\u0000~\u0000\u0000q\u0000~\u0000\u0013psq\u0000~\u0000\u0000q\u0000~\u0000\u0013psq\u0000~\u0000\u0000q\u0000~\u0000\u0013psq\u0000~\u0000\u0000q\u0000~\u0000\u0013psq\u0000~\u0000\u0000q\u0000~\u0000\u0013ps"
+"q\u0000~\u0000\u0000q\u0000~\u0000\u0013psq\u0000~\u0000\u0000q\u0000~\u0000\u0013psq\u0000~\u0000\u0000q\u0000~\u0000\u0013psq\u0000~\u0000\u0007q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0007pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u000fq\u0000~\u0000\u0013psq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000"
+";org.notariado.ancert.xml.plusvalias.liquidacion.NotarioType"
+"q\u0000~\u0000\"sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u000fNOTARIO_TIT"
+"ULARq\u0000~\u0000=sq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u000fq\u0000~\u0000\u0013psq\u0000~\u0000"
+"\u0014q\u0000~\u0000\u0013pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000Oq\u0000~\u0000\"sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000"
+"~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0013NOTARIO_AUTORIZANTEq\u0000~\u0000=sq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000"
+"\u0000ppsq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u000fq\u0000~\u0000\u0013psq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001ds"
+"q\u0000~\u0000\u001et\u0000=org.notariado.ancert.xml.plusvalias.liquidacion.Prot"
+"ocoloTypeq\u0000~\u0000\"sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\tPR"
+"OTOCOLOq\u0000~\u0000=sq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u000fq\u0000~\u0000\u0013psq"
+"\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000@org.notariado.ancert.xml.p"
+"lusvalias.liquidacion.ActoJuridicoTypeq\u0000~\u0000\"sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~"
+"\u0000\u0013pq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\rACTO_JURIDICOq\u0000~\u0000=sq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\u0000"
+"ppsq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u000fq\u0000~\u0000\u0013psq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq"
+"\u0000~\u0000\u001et\u0000borg.notariado.ancert.xml.plusvalias.liquidacion.CALCU"
+"LOLIQUIDACIONType.REPLYType.TRANSMITENTESTypeq\u0000~\u0000\"sq\u0000~\u0000\rppsq"
+"\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\rTRANSMITENTESq\u0000~\u0000=sq\u0000~\u0000\u0007pp"
+"\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u000fq\u0000~\u0000\u0013psq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000\u0017q\u0000~\u0000\u001b"
+"q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000`org.notariado.ancert.xml.plusvalias.liquidacio"
+"n.CALCULOLIQUIDACIONType.REPLYType.ADQUIRENTESTypeq\u0000~\u0000\"sq\u0000~\u0000"
+"\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u000bADQUIRENTESq\u0000~\u0000=sq\u0000~\u0000"
+"\u0007pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u000fq\u0000~\u0000\u0013psq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000\u0017q\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000]org.notariado.ancert.xml.plusvalias.liquida"
+"cion.CALCULOLIQUIDACIONType.REPLYType.INMUEBLETypeq\u0000~\u0000\"sq\u0000~\u0000"
+"\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\bINMUEBLEq\u0000~\u0000=sq\u0000~\u0000\rpp"
+"sq\u0000~\u0000\u0007q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u000fq\u0000~\u0000\u0013psq\u0000~\u0000\u0014q\u0000~\u0000"
+"\u0013pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000corg.notariado.ancert.xml.plusvalia"
+"s.liquidacion.CALCULOLIQUIDACIONType.REPLYType.REPRESENTANTE"
+"STypeq\u0000~\u0000\"sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u000eREPRES"
+"ENTANTESq\u0000~\u0000=q\u0000~\u0000\u001dsq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000%ppsr\u0000%com.sun.msv.d"
+"atatype.xsd.PatternFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001[\u0000\bpatternst\u0000\u0013[Ljava/lang"
+"/String;xr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalCons"
+"traintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeW"
+"ithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bba"
+"seTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcret"
+"eTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq"
+"\u0000~\u0000\u001fxq\u0000~\u0000,q\u0000~\u0000=t\u0000\u0015IMPORTE_ECONOMICOTypeq\u0000~\u00003\u0000\u0001sr\u0000(com.sun.ms"
+"v.datatype.xsd.WhiteSpaceFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00aeq\u0000~\u0000=q\u0000~\u0000\u00b2q\u0000~"
+"\u00003\u0000\u0001sr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000"
+"\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueCons"
+"traintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000\u00aeq\u0000~\u0000=q\u0000~\u0000\u00b2sr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00002\u0000\u0000sr\u0000#co"
+"m.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValid"
+"xq\u0000~\u0000*q\u0000~\u0000/t\u0000\u0006stringq\u0000~\u0000\u00b9\u0001q\u0000~\u0000\u00bbt\u0000\tmaxLength\u0000\u0000\u0000\u0014q\u0000~\u0000\u00bbt\u0000\nwhite"
+"Spaceq\u0000~\u0000\u00bbt\u0000\u0007patternur\u0000\u0013[Ljava.lang.String;\u00ad\u00d2V\u00e7\u00e9\u001d{G\u0002\u0000\u0000xp\u0000\u0000\u0000\u0001"
+"t\u0000\"(\\d{1,3}(\\.\\d{3})*|\\d+)(,\\d{1,2})?q\u0000~\u00005sq\u0000~\u00006q\u0000~\u0000\u00b2q\u0000~\u0000=sq"
+"\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\rIMPORTE_TOTALq\u0000~\u0000="
+"sq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u000fq\u0000~\u0000\u0013psq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000"
+"~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000_org.notariado.ancert.xml.plusvalias.li"
+"quidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSTypeq\u0000~"
+"\u0000\"sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\nDOCUMENTOSq\u0000~\u0000"
+"=q\u0000~\u0000\u001dsq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u000fq\u0000~\u0000\u0013psq\u0000~\u0000\u0014q\u0000"
+"~\u0000\u0013pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000^org.notariado.ancert.xml.plusval"
+"ias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.RESULTADOTy"
+"peq\u0000~\u0000\"sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\tRESULTADO"
+"q\u0000~\u0000=sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexp"
+"Tablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000"
+"-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005"
+"countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expres"
+"sionPool;xp\u0000\u0000\u0000;\u0001pq\u0000~\u0000Lq\u0000~\u0000\u0011q\u0000~\u0000\u00d8q\u0000~\u0000\u00ccq\u0000~\u0000\u00a0q\u0000~\u0000\u0093q\u0000~\u0000\u0087q\u0000~\u0000{q\u0000~"
+"\u0000oq\u0000~\u0000cq\u0000~\u0000Gq\u0000~\u0000\u00c9q\u0000~\u0000\u009dq\u0000~\u0000\u0090q\u0000~\u0000\u0084q\u0000~\u0000xq\u0000~\u0000lq\u0000~\u0000`q\u0000~\u0000Uq\u0000~\u0000Cq\u0000~"
+"\u0000Iq\u0000~\u0000\u000bq\u0000~\u0000@q\u0000~\u0000\u00d7q\u0000~\u0000\u00cbq\u0000~\u0000\u009fq\u0000~\u0000\u0092q\u0000~\u0000\u0086q\u0000~\u0000zq\u0000~\u0000nq\u0000~\u0000bq\u0000~\u0000Wq\u0000~"
+"\u0000Kq\u0000~\u0000\u000eq\u0000~\u0000Bq\u0000~\u0000\u00d5q\u0000~\u0000\u0006q\u0000~\u0000Fq\u0000~\u0000\u009bq\u0000~\u0000Aq\u0000~\u0000\u00dcq\u0000~\u0000\u00d0q\u0000~\u0000\u00c4q\u0000~\u0000\u00a4q\u0000~"
+"\u0000\u0097q\u0000~\u0000\u008bq\u0000~\u0000\u007fq\u0000~\u0000sq\u0000~\u0000gq\u0000~\u0000[q\u0000~\u0000Pq\u0000~\u0000#q\u0000~\u0000\u00a9q\u0000~\u0000Dq\u0000~\u0000>q\u0000~\u0000\u0005q\u0000~"
+"\u0000Eq\u0000~\u0000?q\u0000~\u0000Xx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class ADQUIRENTESTypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.ADQUIRENTESType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
        {

            protected com.sun.xml.bind.util.ListImpl _ADQUIRENTE;
            public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.ADQUIRENTESType.class);
            }

            protected com.sun.xml.bind.util.ListImpl _getADQUIRENTE() {
                if (_ADQUIRENTE == null) {
                    _ADQUIRENTE = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _ADQUIRENTE;
            }

            public java.util.List getADQUIRENTE() {
                return _getADQUIRENTE();
            }

            public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.ADQUIRENTESTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_ADQUIRENTE == null)? 0 :_ADQUIRENTE.size());
                while (idx1 != len1) {
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "ADQUIRENTE");
                    int idx_0 = idx1;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ADQUIRENTE.get(idx_0 ++)), "ADQUIRENTE");
                    context.endNamespaceDecls();
                    int idx_1 = idx1;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ADQUIRENTE.get(idx_1 ++)), "ADQUIRENTE");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _ADQUIRENTE.get(idx1 ++)), "ADQUIRENTE");
                    context.endElement();
                }
            }

            public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_ADQUIRENTE == null)? 0 :_ADQUIRENTE.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_ADQUIRENTE == null)? 0 :_ADQUIRENTE.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.ADQUIRENTESType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002"
+"L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000"
+"~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar.Sequen"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u0006pp\u0000sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000bppsq\u0000~\u0000\u0000sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000>org"
+".notariado.ancert.xml.plusvalias.liquidacion.AdquirenteTypet"
+"\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000eppsq\u0000~\u0000\u0013q"
+"\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/"
+"relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/m"
+"sv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.Qnam"
+"eType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\fnamespaceUriq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/"
+"msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/"
+"2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpac"
+"eProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.W"
+"hiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expre"
+"ssion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.ms"
+"v.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURI"
+"q\u0000~\u0000\u001expq\u0000~\u0000/q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLS"
+"chema-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\nADQUIRENTEt\u00006http://ancert.notar"
+"iado.org/XML/Plusvalias/Liquidacionsr\u0000\"com.sun.msv.grammar.E"
+"xpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/E"
+"xpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressio"
+"nPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parent"
+"t\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\u000fq\u0000~\u0000\fq\u0000~"
+"\u0000\"q\u0000~\u0000\u0005q\u0000~\u0000\u0010x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                    super(context, "----");
                }

                protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.ADQUIRENTESTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("ADQUIRENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  1 :
                                if (("DATOS_BASICOS" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    _getADQUIRENTE().add(((org.notariado.ancert.xml.plusvalias.liquidacion.impl.AdquirenteTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.AdquirenteTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  3 :
                                if (("ADQUIRENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  2 :
                                if (("ADQUIRENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public static class DOCUMENTOSTypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
        {

            protected com.sun.xml.bind.util.ListImpl _DOCUMENTO;
            public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType.class);
            }

            protected com.sun.xml.bind.util.ListImpl _getDOCUMENTO() {
                if (_DOCUMENTO == null) {
                    _DOCUMENTO = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _DOCUMENTO;
            }

            public java.util.List getDOCUMENTO() {
                return _getDOCUMENTO();
            }

            public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.DOCUMENTOSTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_DOCUMENTO == null)? 0 :_DOCUMENTO.size());
                while (idx1 != len1) {
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "DOCUMENTO");
                    int idx_0 = idx1;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DOCUMENTO.get(idx_0 ++)), "DOCUMENTO");
                    context.endNamespaceDecls();
                    int idx_1 = idx1;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DOCUMENTO.get(idx_1 ++)), "DOCUMENTO");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _DOCUMENTO.get(idx1 ++)), "DOCUMENTO");
                    context.endElement();
                }
            }

            public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_DOCUMENTO == null)? 0 :_DOCUMENTO.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_DOCUMENTO == null)? 0 :_DOCUMENTO.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002"
+"L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000"
+"~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar.Sequen"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u0006pp\u0000sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000bppsq\u0000~\u0000\u0000sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000morg"
+".notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDAC"
+"IONType.REPLYType.DOCUMENTOSType.DOCUMENTOTypet\u0000+http://java"
+".sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000eppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012psr\u0000\u001bcom."
+"sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datat"
+"ype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/Strin"
+"gPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com."
+"sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUr"
+"iq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/"
+"xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchem"
+"at\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Co"
+"llapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSet"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.util.String"
+"Pair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000/q"
+"\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanc"
+"eq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\tDOCUMENTOt\u00006http://ancert.notariado.org/XML/P"
+"lusvalias/Liquidacionsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$"
+"ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHa"
+"sh\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/ms"
+"v/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\u000fq\u0000~\u0000\fq\u0000~\u0000\"q\u0000~\u0000\u0005q\u0000~\u0000\u0010x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class DOCUMENTOTypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType.DOCUMENTOType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
            {

                protected byte[] _PDF;
                protected boolean has_IDSUJETO;
                protected long _IDSUJETO;
                protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType.DOCUMENTOType.IMPORTEType _IMPORTE;
                public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType.DOCUMENTOType.class);
                }

                public byte[] getPDF() {
                    return _PDF;
                }

                public void setPDF(byte[] value) {
                    _PDF = value;
                }

                public long getIDSUJETO() {
                    return _IDSUJETO;
                }

                public void setIDSUJETO(long value) {
                    _IDSUJETO = value;
                    has_IDSUJETO = true;
                }

                public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType.DOCUMENTOType.IMPORTEType getIMPORTE() {
                    return _IMPORTE;
                }

                public void setIMPORTE(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType.DOCUMENTOType.IMPORTEType value) {
                    _IMPORTE = value;
                }

                public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                    return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.DOCUMENTOSTypeImpl.DOCUMENTOTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (!has_IDSUJETO) {
                        context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IDSUJETO"));
                    }
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "ID_SUJETO");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _IDSUJETO)), "IDSUJETO");
                    } catch (java.lang.Exception e) {
                        org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "IMPORTE");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _IMPORTE), "IMPORTE");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _IMPORTE), "IMPORTE");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _IMPORTE), "IMPORTE");
                    context.endElement();
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "PDF");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.Base64BinaryType.save(((byte[]) _PDF)), "PDF");
                    } catch (java.lang.Exception e) {
                        org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }

                public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (!has_IDSUJETO) {
                        context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IDSUJETO"));
                    }
                }

                public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (!has_IDSUJETO) {
                        context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IDSUJETO"));
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType.DOCUMENTOType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000pps"
+"r\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxn"
+"g/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/uti"
+"l/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\'com.sun.msv.datatype.xsd.FinalCompo"
+"nent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Pro"
+"xy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatat"
+"ypeImpl;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0014L\u0000\nwhi"
+"teSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000"
+"6http://ancert.notariado.org/XML/Plusvalias/Liquidaciont\u0000\u0011ID"
+"_SECUENCIALTypesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProces"
+"sor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpa"
+"ceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000(com.sun.msv.datatype.xsd.Unsigne"
+"dIntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6"
+"k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000\u0012xr\u0000*com.sun.msv.datatype.xsd.BuiltinA"
+"tomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0013t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u000bunsi"
+"gnedIntq\u0000~\u0000\u001bsr\u0000*com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.datatype.xs"
+"d.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv"
+".datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012"
+"needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0012L\u0000\fconcreteTypet\u0000\'Lcom/sun"
+"/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0014xq\u0000~\u0000\u0013ppq\u0000~\u0000"
+"\u001b\u0000\u0000sr\u0000)com.sun.msv.datatype.xsd.UnsignedLongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000"
+"\"t\u0000\funsignedLongq\u0000~\u0000\u001bsq\u0000~\u0000$ppq\u0000~\u0000\u001b\u0000\u0000sr\u0000/com.sun.msv.datatype"
+".xsd.NonNegativeIntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000,q\u0000~\u0000\"t\u0000\u0012nonNegat"
+"iveIntegerq\u0000~\u0000\u001bsr\u0000*com.sun.msv.datatype.xsd.MinInclusiveFace"
+"t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000%ppq\u0000~\u0000\u001b\u0000\u0000sq\u0000~\u0000,q\u0000~\u0000\"t\u0000\u0007integerq\u0000~\u0000\u001bsr\u0000,com"
+".sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scale"
+"xr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFa"
+"cetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000(ppq\u0000~\u0000\u001b\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.Nu"
+"mberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~\u0000\"t\u0000\u0007decimalq\u0000~\u0000\u001bq\u0000~\u0000;t\u0000\u000efractio"
+"nDigits\u0000\u0000\u0000\u0000q\u0000~\u00005t\u0000\fminInclusivesr\u0000)com.sun.msv.datatype.xsd."
+"IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u0014xr\u0000\u0010java.lang.Number"
+"\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00010q\u0000~\u00001t\u0000\fmaxInclusivesq\u0000~\u0000?t\u0000\u001418446744073709"
+"551615q\u0000~\u0000-q\u0000~\u0000Csr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexq\u0000~\u0000@\u0000"
+"\u0000\u0000\u0000\u00ff\u00ff\u00ff\u00ff\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$NullSetExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005value"
+"xp\u0000psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000"
+"~\u0000\u0014L\u0000\fnamespaceURIq\u0000~\u0000\u0014xpq\u0000~\u0000#q\u0000~\u0000\u0017sr\u0000\u001dcom.sun.msv.grammar.C"
+"hoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.Attribute"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\bxq\u0000~\u0000\u0003q\u0000~\u0000Kpsq\u0000~\u0000\f"
+"ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~"
+"\u0000\"t\u0000\u0005QNameq\u0000~\u0000\u001bq\u0000~\u0000Isq\u0000~\u0000Lq\u0000~\u0000Uq\u0000~\u0000\"sr\u0000#com.sun.msv.grammar."
+"SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0014L\u0000\fnamespaceURIq\u0000"
+"~\u0000\u0014xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)h"
+"ttp://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.gram"
+"mar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000J\u0001q\u0000~\u0000"
+"]sq\u0000~\u0000Wt\u0000\tID_SUJETOq\u0000~\u0000\u0017sq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000Nppsr"
+"\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv"
+".grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000Kpsq\u0000~\u0000Pq\u0000~"
+"\u0000Kpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000^q\u0000~\u0000jsr\u0000 com.sun.msv.grammar.AnyNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Xq\u0000~\u0000]sq\u0000~\u0000Wt\u0000yorg.notariado.ancert.xml.plus"
+"valias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENT"
+"OSType.DOCUMENTOType.IMPORTETypet\u0000+http://java.sun.com/jaxb/"
+"xjc/dummy-elementssq\u0000~\u0000Nppsq\u0000~\u0000Pq\u0000~\u0000Kpq\u0000~\u0000Rq\u0000~\u0000Yq\u0000~\u0000]sq\u0000~\u0000Wt"
+"\u0000\u0007IMPORTEq\u0000~\u0000\u0017sq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fppsr\u0000\'com.sun.msv.datat"
+"ype.xsd.MinLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tminLengthxq\u0000~\u0000\'q\u0000~\u0000\u0017pq\u0000~"
+"\u0000\u001b\u0000\u0000sr\u0000)com.sun.msv.datatype.xsd.Base64BinaryType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\'com.sun.msv.datatype.xsd.BinaryBaseType\u00a7\u00ce\u000e\u0097^\u00afW\u0011\u0002\u0000\u0000xq\u0000~\u0000\u001f"
+"q\u0000~\u0000\"t\u0000\fbase64Binaryq\u0000~\u0000\u001bq\u0000~\u0000{t\u0000\tminLength\u0000\u0000\u0000\u0001q\u0000~\u0000Isq\u0000~\u0000Lt\u0000\u0014"
+"base64Binary-derivedq\u0000~\u0000\u0017sq\u0000~\u0000Nppsq\u0000~\u0000Pq\u0000~\u0000Kpq\u0000~\u0000Rq\u0000~\u0000Yq\u0000~\u0000]"
+"sq\u0000~\u0000Wt\u0000\u0003PDFq\u0000~\u0000\u0017sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Clos"
+"edHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j"
+"\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gr"
+"ammar/ExpressionPool;xp\u0000\u0000\u0000\n\u0001pq\u0000~\u0000\u0005q\u0000~\u0000dq\u0000~\u0000bq\u0000~\u0000\u000bq\u0000~\u0000Oq\u0000~\u0000pq"
+"\u0000~\u0000\u0080q\u0000~\u0000uq\u0000~\u0000\u0006q\u0000~\u0000gx"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public static class IMPORTETypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType.DOCUMENTOType.IMPORTEType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
                {

                    protected java.lang.String _IMPORTERECARGO;
                    protected boolean has_INFORMARECARGO;
                    protected boolean _INFORMARECARGO;
                    protected java.lang.String _IMPORTETOTAL;
                    protected java.lang.String _PORCENTAJERECARGO;
                    public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType.DOCUMENTOType.IMPORTEType.class);
                    }

                    public java.lang.String getIMPORTERECARGO() {
                        return _IMPORTERECARGO;
                    }

                    public void setIMPORTERECARGO(java.lang.String value) {
                        _IMPORTERECARGO = value;
                    }

                    public boolean isINFORMARECARGO() {
                        return _INFORMARECARGO;
                    }

                    public void setINFORMARECARGO(boolean value) {
                        _INFORMARECARGO = value;
                        has_INFORMARECARGO = true;
                    }

                    public java.lang.String getIMPORTETOTAL() {
                        return _IMPORTETOTAL;
                    }

                    public void setIMPORTETOTAL(java.lang.String value) {
                        _IMPORTETOTAL = value;
                    }

                    public java.lang.String getPORCENTAJERECARGO() {
                        return _PORCENTAJERECARGO;
                    }

                    public void setPORCENTAJERECARGO(java.lang.String value) {
                        _PORCENTAJERECARGO = value;
                    }

                    public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                        return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.DOCUMENTOSTypeImpl.DOCUMENTOTypeImpl.IMPORTETypeImpl.Unmarshaller(context);
                    }

                    public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        if (!has_INFORMARECARGO) {
                            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "INFORMARECARGO"));
                        }
                        context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "INFORMA_RECARGO");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _INFORMARECARGO)), "INFORMARECARGO");
                        } catch (java.lang.Exception e) {
                            org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                        if (_PORCENTAJERECARGO!= null) {
                            context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "PORCENTAJE_RECARGO");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(((java.lang.String) _PORCENTAJERECARGO), "PORCENTAJERECARGO");
                            } catch (java.lang.Exception e) {
                                org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_IMPORTERECARGO!= null) {
                            context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "IMPORTE_RECARGO");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(((java.lang.String) _IMPORTERECARGO), "IMPORTERECARGO");
                            } catch (java.lang.Exception e) {
                                org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "IMPORTE_TOTAL");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _IMPORTETOTAL), "IMPORTETOTAL");
                        } catch (java.lang.Exception e) {
                            org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }

                    public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        if (!has_INFORMARECARGO) {
                            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "INFORMARECARGO"));
                        }
                    }

                    public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        if (!has_INFORMARECARGO) {
                            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "INFORMARECARGO"));
                        }
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.DOCUMENTOSType.DOCUMENTOType.IMPORTEType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar."
+"trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000s"
+"q\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLor"
+"g/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun"
+"/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.Bo"
+"oleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtom"
+"icType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0015L\u0000\nwh"
+"iteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt"
+"\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007booleansr\u00005com.sun.msv."
+"datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com"
+".sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.ms"
+"v.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0015L\u0000\fnamespaceURI"
+"q\u0000~\u0000\u0015xpq\u0000~\u0000\u0019q\u0000~\u0000\u0018sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003e"
+"xpq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003q\u0000~\u0000 psq\u0000~\u0000\rppsr\u0000\"com.sun.msv."
+"datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0012q\u0000~\u0000\u0018t\u0000\u0005QNameq\u0000~\u0000\u001cq\u0000~"
+"\u0000\u001esq\u0000~\u0000!q\u0000~\u0000*q\u0000~\u0000\u0018sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0015L\u0000\fnamespaceURIq\u0000~\u0000\u0015xr\u0000\u001dcom.sun.msv"
+".grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2"
+"001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u001f\u0001q\u0000~\u00002sq\u0000~\u0000,t\u0000\u000fINFORMA_"
+"RECARGOt\u00006http://ancert.notariado.org/XML/Plusvalias/Liquida"
+"cionsq\u0000~\u0000#ppsq\u0000~\u0000\bq\u0000~\u0000 p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rppsr\u0000%com.sun.msv.dat"
+"atype.xsd.PatternFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001[\u0000\bpatternst\u0000\u0013[Ljava/lang/S"
+"tring;xr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstr"
+"aintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWit"
+"hFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbase"
+"Typet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteT"
+"ypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~"
+"\u0000\u0015xq\u0000~\u0000\u0014q\u0000~\u00006t\u0000\u000ePORCENTAJETypeq\u0000~\u0000\u001c\u0000\u0001sr\u0000(com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000>q\u0000~\u00006q\u0000~\u0000Bq\u0000~\u0000\u001c\u0000\u0001sr\u0000\'c"
+"om.sun.msv.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengt"
+"hxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFac"
+"et\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000>q\u0000~\u00006q\u0000~\u0000Bsr\u00005com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001b\u0000\u0000sr\u0000#com.sun.msv"
+".datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0012q\u0000~"
+"\u0000\u0018t\u0000\u0006stringq\u0000~\u0000I\u0001q\u0000~\u0000Kt\u0000\tmaxLength\u0000\u0000\u0000\u0007q\u0000~\u0000Kt\u0000\nwhiteSpaceq\u0000~\u0000"
+"Kt\u0000\u0007patternur\u0000\u0013[Ljava.lang.String;\u00ad\u00d2V\u00e7\u00e9\u001d{G\u0002\u0000\u0000xp\u0000\u0000\u0000\u0001t\u0000\u0014(\\d{1,"
+"3})(,\\d{1,3})?q\u0000~\u0000\u001esq\u0000~\u0000!q\u0000~\u0000Bq\u0000~\u00006sq\u0000~\u0000#ppsq\u0000~\u0000%q\u0000~\u0000 pq\u0000~\u0000\'"
+"q\u0000~\u0000.q\u0000~\u00002sq\u0000~\u0000,t\u0000\u0012PORCENTAJE_RECARGOq\u0000~\u00006q\u0000~\u00002sq\u0000~\u0000#ppsq\u0000~\u0000"
+"\bq\u0000~\u0000 p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rppsq\u0000~\u0000;q\u0000~\u00006t\u0000\u0015IMPORTE_ECONOMICOTypeq"
+"\u0000~\u0000\u001c\u0000\u0001sq\u0000~\u0000Cq\u0000~\u00006q\u0000~\u0000]q\u0000~\u0000\u001c\u0000\u0001sq\u0000~\u0000Eq\u0000~\u00006q\u0000~\u0000]q\u0000~\u0000I\u0000\u0000q\u0000~\u0000Kq\u0000~"
+"\u0000Kq\u0000~\u0000M\u0000\u0000\u0000\u0014q\u0000~\u0000Kq\u0000~\u0000Nq\u0000~\u0000Kq\u0000~\u0000Ouq\u0000~\u0000P\u0000\u0000\u0000\u0001t\u0000\"(\\d{1,3}(\\.\\d{3}"
+")*|\\d+)(,\\d{1,2})?q\u0000~\u0000\u001esq\u0000~\u0000!q\u0000~\u0000]q\u0000~\u00006sq\u0000~\u0000#ppsq\u0000~\u0000%q\u0000~\u0000 pq"
+"\u0000~\u0000\'q\u0000~\u0000.q\u0000~\u00002sq\u0000~\u0000,t\u0000\u000fIMPORTE_RECARGOq\u0000~\u00006q\u0000~\u00002sq\u0000~\u0000\bpp\u0000sq\u0000"
+"~\u0000\u0000ppq\u0000~\u0000[sq\u0000~\u0000#ppsq\u0000~\u0000%q\u0000~\u0000 pq\u0000~\u0000\'q\u0000~\u0000.q\u0000~\u00002sq\u0000~\u0000,t\u0000\rIMPORT"
+"E_TOTALq\u0000~\u00006sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHas"
+"h;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed"
+"\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar"
+"/ExpressionPool;xp\u0000\u0000\u0000\r\u0001pq\u0000~\u0000\fq\u0000~\u0000\u0007q\u0000~\u0000Xq\u0000~\u0000Zq\u0000~\u0000hq\u0000~\u0000\u0006q\u0000~\u00009q"
+"\u0000~\u0000$q\u0000~\u0000Tq\u0000~\u0000cq\u0000~\u0000iq\u0000~\u00007q\u0000~\u0000\u0005x"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                            super(context, "-------------");
                        }

                        protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.DOCUMENTOSTypeImpl.DOCUMENTOTypeImpl.IMPORTETypeImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  3 :
                                        if (("PORCENTAJE_RECARGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 4;
                                            return ;
                                        }
                                        state = 6;
                                        continue outer;
                                    case  0 :
                                        if (("INFORMA_RECARGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 1;
                                            return ;
                                        }
                                        break;
                                    case  12 :
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                    case  9 :
                                        if (("IMPORTE_TOTAL" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 10;
                                            return ;
                                        }
                                        break;
                                    case  6 :
                                        if (("IMPORTE_RECARGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 7;
                                            return ;
                                        }
                                        state = 9;
                                        continue outer;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  8 :
                                        if (("IMPORTE_RECARGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                            context.popAttributes();
                                            state = 9;
                                            return ;
                                        }
                                        break;
                                    case  2 :
                                        if (("INFORMA_RECARGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                            context.popAttributes();
                                            state = 3;
                                            return ;
                                        }
                                        break;
                                    case  11 :
                                        if (("IMPORTE_TOTAL" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                            context.popAttributes();
                                            state = 12;
                                            return ;
                                        }
                                        break;
                                    case  5 :
                                        if (("PORCENTAJE_RECARGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                            context.popAttributes();
                                            state = 6;
                                            return ;
                                        }
                                        break;
                                    case  12 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  12 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  12 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  7 :
                                            eatText1(value);
                                            state = 8;
                                            return ;
                                        case  3 :
                                            state = 6;
                                            continue outer;
                                        case  1 :
                                            eatText2(value);
                                            state = 2;
                                            return ;
                                        case  12 :
                                            revertToParentFromText(value);
                                            return ;
                                        case  10 :
                                            eatText3(value);
                                            state = 11;
                                            return ;
                                        case  4 :
                                            eatText4(value);
                                            state = 5;
                                            return ;
                                        case  6 :
                                            state = 9;
                                            continue outer;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                        private void eatText1(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _IMPORTERECARGO = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText2(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _INFORMARECARGO = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                has_INFORMARECARGO = true;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText3(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _IMPORTETOTAL = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText4(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _PORCENTAJERECARGO = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                    }

                }

                public class Unmarshaller
                    extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                        super(context, "----------");
                    }

                    protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.DOCUMENTOSTypeImpl.DOCUMENTOTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    if (("IMPORTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 4;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    if (("ID_SUJETO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    break;
                                case  9 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  4 :
                                    if (("INFORMA_RECARGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        _IMPORTE = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.DOCUMENTOSTypeImpl.DOCUMENTOTypeImpl.IMPORTETypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.DOCUMENTOSTypeImpl.DOCUMENTOTypeImpl.IMPORTETypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    if (("PDF" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    break;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  8 :
                                    if (("PDF" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  9 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  5 :
                                    if (("IMPORTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  2 :
                                    if (("ID_SUJETO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  9 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  1 :
                                        eatText1(value);
                                        state = 2;
                                        return ;
                                    case  7 :
                                        eatText2(value);
                                        state = 8;
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _IDSUJETO = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_IDSUJETO = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _PDF = com.sun.msv.datatype.xsd.Base64BinaryType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public class Unmarshaller
                extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                    super(context, "----");
                }

                protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.DOCUMENTOSTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                if (("DOCUMENTO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  0 :
                                if (("DOCUMENTO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  1 :
                                if (("ID_SUJETO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    _getDOCUMENTO().add(((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.DOCUMENTOSTypeImpl.DOCUMENTOTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.DOCUMENTOSTypeImpl.DOCUMENTOTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  2 :
                                if (("DOCUMENTO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public static class INMUEBLETypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.INMUEBLEType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
        {

            protected java.lang.String _SUPERFICIEINMUEBLE;
            protected org.notariado.ancert.xml.plusvalias.liquidacion.DireccionInmuebleType _DIRECCION;
            protected java.lang.String _REFERENCIACATASTRAL;
            public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.INMUEBLEType.class);
            }

            public java.lang.String getSUPERFICIEINMUEBLE() {
                return _SUPERFICIEINMUEBLE;
            }

            public void setSUPERFICIEINMUEBLE(java.lang.String value) {
                _SUPERFICIEINMUEBLE = value;
            }

            public org.notariado.ancert.xml.plusvalias.liquidacion.DireccionInmuebleType getDIRECCION() {
                return _DIRECCION;
            }

            public void setDIRECCION(org.notariado.ancert.xml.plusvalias.liquidacion.DireccionInmuebleType value) {
                _DIRECCION = value;
            }

            public java.lang.String getREFERENCIACATASTRAL() {
                return _REFERENCIACATASTRAL;
            }

            public void setREFERENCIACATASTRAL(java.lang.String value) {
                _REFERENCIACATASTRAL = value;
            }

            public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.INMUEBLETypeImpl.Unmarshaller(context);
            }

            public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "REFERENCIA_CATASTRAL");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _REFERENCIACATASTRAL), "REFERENCIACATASTRAL");
                } catch (java.lang.Exception e) {
                    org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "DIRECCION");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DIRECCION), "DIRECCION");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DIRECCION), "DIRECCION");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _DIRECCION), "DIRECCION");
                context.endElement();
                if (_SUPERFICIEINMUEBLE!= null) {
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "SUPERFICIE_INMUEBLE");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _SUPERFICIEINMUEBLE), "SUPERFICIEINMUEBLE");
                    } catch (java.lang.Exception e) {
                        org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
            }

            public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.INMUEBLEType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000pps"
+"r\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxn"
+"g/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/uti"
+"l/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.LengthFace"
+"t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0006lengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWi"
+"thValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xs"
+"d.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueChe"
+"ckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl"
+";L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000"
+"\tfacetNamet\u0000\u0012Ljava/lang/String;xr\u0000\'com.sun.msv.datatype.xsd."
+"XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u0015L\u0000\btypeNameq\u0000~\u0000"
+"\u0015L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcess"
+"or;xpt\u00006http://ancert.notariado.org/XML/Plusvalias/Liquidaci"
+"ont\u0000\u0018REFERENCIA_CATASTRALTypesr\u00005com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000%com.sun.msv.data"
+"type.xsd.PatternFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001[\u0000\bpatternst\u0000\u0013[Ljava/lang/St"
+"ring;xr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstra"
+"intFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u0012q\u0000~\u0000\u0019t\u0000\nSTRINGTypeq\u0000~\u0000\u001d\u0000\u0000sr\u0000#com.su"
+"n.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*"
+"com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com"
+".sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0016t\u0000 http:/"
+"/www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000\u001d\u0001q\u0000~\u0000&t\u0000\u0007patternur\u0000\u0013"
+"[Ljava.lang.String;\u00ad\u00d2V\u00e7\u00e9\u001d{G\u0002\u0000\u0000xp\u0000\u0000\u0000\u0001t\u0000\n[^\\r\\n\\t]*q\u0000~\u0000&t\u0000\u0006len"
+"gth\u0000\u0000\u0000\u0014sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p"
+"sr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0015L"
+"\u0000\fnamespaceURIq\u0000~\u0000\u0015xpq\u0000~\u0000\u001aq\u0000~\u0000\u0019sr\u0000\u001dcom.sun.msv.grammar.Choic"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\bxq\u0000~\u0000\u0003q\u0000~\u00001psq\u0000~\u0000\fppsr"
+"\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000$q\u0000~\u0000\'t\u0000"
+"\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Colla"
+"pse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001cq\u0000~\u0000/sq\u0000~\u00002q\u0000~\u0000;q\u0000~\u0000\'sr\u0000#com.sun.msv.gra"
+"mmar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0015L\u0000\fnamespace"
+"URIq\u0000~\u0000\u0015xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typ"
+"et\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv"
+".grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u00000"
+"\u0001q\u0000~\u0000Esq\u0000~\u0000?t\u0000\u0014REFERENCIA_CATASTRALq\u0000~\u0000\u0019sq\u0000~\u0000\u0007pp\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\u0007pp\u0000sq\u0000~\u00004ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000"
+"\u0003q\u0000~\u00001psq\u0000~\u00006q\u0000~\u00001psr\u00002com.sun.msv.grammar.Expression$AnyStr"
+"ingExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000Fq\u0000~\u0000Rsr\u0000 com.sun.msv.gram"
+"mar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000@q\u0000~\u0000Esq\u0000~\u0000?t\u0000Eorg.notariado"
+".ancert.xml.plusvalias.liquidacion.DireccionInmuebleTypet\u0000+h"
+"ttp://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u00004ppsq\u0000~\u00006q\u0000~\u0000"
+"1pq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\tDIRECCIONq\u0000~\u0000\u0019sq\u0000~\u00004ppsq\u0000~\u0000\u0007q\u0000~\u00001p"
+"\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fppsq\u0000~\u0000\u001eq\u0000~\u0000\u0019t\u0000\u0017SUPERFICIE_INMUEBLETypeq\u0000~\u0000=\u0000"
+"\u0001sr\u0000(com.sun.msv.datatype.xsd.WhiteSpaceFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0012q\u0000~\u0000\u0019q\u0000~\u0000aq\u0000~\u0000=\u0000\u0001sr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFac"
+"et\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxq\u0000~\u0000\u0011q\u0000~\u0000\u0019q\u0000~\u0000aq\u0000~\u0000\u001d\u0000\u0000q\u0000~\u0000&q\u0000~\u0000&t\u0000"
+"\tmaxLength\u0000\u0000\u0000\u000bq\u0000~\u0000&t\u0000\nwhiteSpaceq\u0000~\u0000&q\u0000~\u0000)uq\u0000~\u0000*\u0000\u0000\u0000\u0001t\u0000\u0014(\\d{1"
+",8})(,\\d{1,2})?q\u0000~\u0000/sq\u0000~\u00002q\u0000~\u0000aq\u0000~\u0000\u0019sq\u0000~\u00004ppsq\u0000~\u00006q\u0000~\u00001pq\u0000~\u0000"
+"8q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\u0013SUPERFICIE_INMUEBLEq\u0000~\u0000\u0019q\u0000~\u0000Esr\u0000\"com.sun"
+".msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun"
+"/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gra"
+"mmar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVe"
+"rsionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u000b\u0001"
+"pq\u0000~\u0000\u0005q\u0000~\u0000^q\u0000~\u0000\\q\u0000~\u0000Lq\u0000~\u0000Jq\u0000~\u0000\u0006q\u0000~\u00005q\u0000~\u0000Xq\u0000~\u0000kq\u0000~\u0000\u000bq\u0000~\u0000Ox"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                    super(context, "----------");
                }

                protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.INMUEBLETypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("REFERENCIA_CATASTRAL" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  9 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  3 :
                                if (("DIRECCION" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 4;
                                    return ;
                                }
                                break;
                            case  6 :
                                if (("SUPERFICIE_INMUEBLE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                            case  4 :
                                if (("INE_PROVINCIA" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    _DIRECCION = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.DireccionInmuebleTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.DireccionInmuebleTypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  8 :
                                if (("SUPERFICIE_INMUEBLE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  2 :
                                if (("REFERENCIA_CATASTRAL" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  9 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  5 :
                                if (("DIRECCION" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  6 :
                                state = 9;
                                continue outer;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  9 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  6 :
                                state = 9;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  9 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  6 :
                                state = 9;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  7 :
                                    eatText1(value);
                                    state = 8;
                                    return ;
                                case  9 :
                                    revertToParentFromText(value);
                                    return ;
                                case  1 :
                                    eatText2(value);
                                    state = 2;
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _SUPERFICIEINMUEBLE = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _REFERENCIACATASTRAL = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public static class REPRESENTANTESTypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.REPRESENTANTESType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
        {

            protected com.sun.xml.bind.util.ListImpl _REPRESENTANTE;
            public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.REPRESENTANTESType.class);
            }

            protected com.sun.xml.bind.util.ListImpl _getREPRESENTANTE() {
                if (_REPRESENTANTE == null) {
                    _REPRESENTANTE = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _REPRESENTANTE;
            }

            public java.util.List getREPRESENTANTE() {
                return _getREPRESENTANTE();
            }

            public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.REPRESENTANTESTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_REPRESENTANTE == null)? 0 :_REPRESENTANTE.size());
                while (idx1 != len1) {
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "REPRESENTANTE");
                    int idx_0 = idx1;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _REPRESENTANTE.get(idx_0 ++)), "REPRESENTANTE");
                    context.endNamespaceDecls();
                    int idx_1 = idx1;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _REPRESENTANTE.get(idx_1 ++)), "REPRESENTANTE");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _REPRESENTANTE.get(idx1 ++)), "REPRESENTANTE");
                    context.endElement();
                }
            }

            public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_REPRESENTANTE == null)? 0 :_REPRESENTANTE.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_REPRESENTANTE == null)? 0 :_REPRESENTANTE.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.REPRESENTANTESType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002"
+"L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000"
+"~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar.Sequen"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u0006pp\u0000sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000bppsq\u0000~\u0000\u0000sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000:org"
+".notariado.ancert.xml.plusvalias.liquidacion.SujetoTypet\u0000+ht"
+"tp://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000eppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012"
+"psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/rela"
+"xng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/u"
+"til/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fna"
+"mespaceUriq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/"
+"datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001"
+"/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePro"
+"cessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.White"
+"SpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressio"
+"n$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.ut"
+"il.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000"
+"\u001expq\u0000~\u0000/q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchem"
+"a-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\rREPRESENTANTEt\u00006http://ancert.notari"
+"ado.org/XML/Plusvalias/Liquidacionsr\u0000\"com.sun.msv.grammar.Ex"
+"pressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Ex"
+"pressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expression"
+"Pool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt"
+"\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\u000fq\u0000~\u0000\fq\u0000~\u0000"
+"\"q\u0000~\u0000\u0005q\u0000~\u0000\u0010x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                    super(context, "----");
                }

                protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.REPRESENTANTESTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  1 :
                                if (("IDENTIFICADOR" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    _getREPRESENTANTE().add(((org.notariado.ancert.xml.plusvalias.liquidacion.impl.SujetoTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.SujetoTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  0 :
                                if (("REPRESENTANTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  3 :
                                if (("REPRESENTANTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("REPRESENTANTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public static class RESULTADOTypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.RESULTADOType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
        {

            protected boolean has_RETORNO;
            protected boolean _RETORNO;
            protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.RESULTADOType.ERRORType _ERROR;
            public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.RESULTADOType.class);
            }

            public boolean isRETORNO() {
                return _RETORNO;
            }

            public void setRETORNO(boolean value) {
                _RETORNO = value;
                has_RETORNO = true;
            }

            public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.RESULTADOType.ERRORType getERROR() {
                return _ERROR;
            }

            public void setERROR(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.RESULTADOType.ERRORType value) {
                _ERROR = value;
            }

            public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.RESULTADOTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_RETORNO) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "RETORNO"));
                }
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "RETORNO");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _RETORNO)), "RETORNO");
                } catch (java.lang.Exception e) {
                    org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                if (_ERROR!= null) {
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "ERROR");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ERROR), "ERROR");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ERROR), "ERROR");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _ERROR), "ERROR");
                    context.endElement();
                }
            }

            public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_RETORNO) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "RETORNO"));
                }
            }

            public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_RETORNO) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "RETORNO"));
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.RESULTADOType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
+"ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
+"xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
+"aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.s"
+"un.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/dataty"
+"pe/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/String"
+"Pair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com"
+".sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceU"
+"rit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0013L\u0000\nwhiteSpacet\u0000.Lcom/"
+"sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3."
+"org/2001/XMLSchemat\u0000\u0007booleansr\u00005com.sun.msv.datatype.xsd.Whi"
+"teSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype"
+".xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar"
+".Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sr\u0000\u0011java.lang."
+"Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.util.StringPai"
+"r\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0013L\u0000\fnamespaceURIq\u0000~\u0000\u0013xpq\u0000~\u0000\u0017q\u0000~\u0000"
+"\u0016sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com"
+".sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameCl"
+"assq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u001epsq\u0000~\u0000\u000bppsr\u0000\"com.sun.msv.datatype.xsd.Qna"
+"meType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0010q\u0000~\u0000\u0016t\u0000\u0005QNameq\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001fq\u0000~\u0000(q\u0000~"
+"\u0000\u0016sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocal"
+"Nameq\u0000~\u0000\u0013L\u0000\fnamespaceURIq\u0000~\u0000\u0013xr\u0000\u001dcom.sun.msv.grammar.NameCla"
+"ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-in"
+"stancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u001d\u0001q\u0000~\u00000sq\u0000~\u0000*t\u0000\u0007RETORNOt\u00006http://ancert."
+"notariado.org/XML/Plusvalias/Liquidacionsq\u0000~\u0000!ppsq\u0000~\u0000\u0006q\u0000~\u0000\u001ep"
+"\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006pp\u0000sq\u0000~\u0000!ppsr\u0000 com.sun.msv.grammar.OneOrMoreE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003e"
+"xpq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u001epsq\u0000~\u0000#q\u0000~\u0000\u001epsr\u00002com.sun.msv.grammar.Expre"
+"ssion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u00001q\u0000~\u0000?sr\u0000 com."
+"sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000+q\u0000~\u00000sq\u0000~\u0000*t\u0000ho"
+"rg.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUID"
+"ACIONType.REPLYType.RESULTADOType.ERRORTypet\u0000+http://java.su"
+"n.com/jaxb/xjc/dummy-elementssq\u0000~\u0000!ppsq\u0000~\u0000#q\u0000~\u0000\u001epq\u0000~\u0000%q\u0000~\u0000,q"
+"\u0000~\u00000sq\u0000~\u0000*t\u0000\u0005ERRORq\u0000~\u00004q\u0000~\u00000sr\u0000\"com.sun.msv.grammar.Expressi"
+"onPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expressi"
+"onPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$C"
+"losedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom"
+"/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\b\u0001pq\u0000~\u0000\nq\u0000~\u00005q\u0000~\u00009q\u0000~\u00007"
+"q\u0000~\u0000\u0005q\u0000~\u0000\"q\u0000~\u0000Eq\u0000~\u0000<x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class ERRORTypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.RESULTADOType.ERRORType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
            {

                protected java.lang.String _DESCRIPCION;
                protected java.lang.String _CODIGO;
                public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.RESULTADOType.ERRORType.class);
                }

                public java.lang.String getDESCRIPCION() {
                    return _DESCRIPCION;
                }

                public void setDESCRIPCION(java.lang.String value) {
                    _DESCRIPCION = value;
                }

                public java.lang.String getCODIGO() {
                    return _CODIGO;
                }

                public void setCODIGO(java.lang.String value) {
                    _CODIGO = value;
                }

                public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                    return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.RESULTADOTypeImpl.ERRORTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "CODIGO");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _CODIGO), "CODIGO");
                    } catch (java.lang.Exception e) {
                        org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "DESCRIPCION");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _DESCRIPCION), "DESCRIPCION");
                    } catch (java.lang.Exception e) {
                        org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }

                public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.RESULTADOType.ERRORType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
+"ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
+"xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
+"aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.s"
+"un.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/dataty"
+"pe/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/String"
+"Pair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.LengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001I\u0000\u0006lengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueC"
+"onstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTy"
+"peWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000"
+"\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconc"
+"reteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNa"
+"met\u0000\u0012Ljava/lang/String;xr\u0000\'com.sun.msv.datatype.xsd.XSDataty"
+"peImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u0014L\u0000\btypeNameq\u0000~\u0000\u0014L\u0000\nwhit"
+"eSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u00006"
+"http://ancert.notariado.org/XML/Plusvalias/Liquidacionpsr\u00005c"
+"om.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xp\u0000\u0000sr\u0000%com.sun.msv.datatype.xsd.PatternFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001[\u0000"
+"\bpatternst\u0000\u0013[Ljava/lang/String;xr\u0000;com.sun.msv.datatype.xsd."
+"DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u0011q\u0000~\u0000\u0018t\u0000\nS"
+"TRINGTypeq\u0000~\u0000\u001b\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAt"
+"omicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006strin"
+"gq\u0000~\u0000\u001b\u0001q\u0000~\u0000$t\u0000\u0007patternur\u0000\u0013[Ljava.lang.String;\u00ad\u00d2V\u00e7\u00e9\u001d{G\u0002\u0000\u0000xp\u0000\u0000"
+"\u0000\u0001t\u0000\n[^\\r\\n\\t]*q\u0000~\u0000$t\u0000\u0006length\u0000\u0000\u0000\u0004sr\u00000com.sun.msv.grammar.Exp"
+"ression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Bool"
+"ean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001e"
+"jB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0014L\u0000\fnamespaceURIq\u0000~\u0000\u0014xpt\u0000\u000estring-der"
+"ivedq\u0000~\u0000\u0018sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001p"
+"psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L"
+"\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000/psq\u0000~\u0000\u000bppsr\u0000\"com.sun.msv.datatype"
+".xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000%t\u0000\u0005QNamesr\u00005com.sun.msv."
+"datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000"
+"~\u0000-sq\u0000~\u00000q\u0000~\u0000:q\u0000~\u0000%sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0014L\u0000\fnamespaceURIq\u0000~\u0000\u0014xr\u0000\u001dcom.sun.ms"
+"v.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/"
+"2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Ep"
+"silonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000.\u0001q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u0006CODIGOq"
+"\u0000~\u0000\u0018sq\u0000~\u0000\u0006pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bppsr\u0000\'com.sun.msv.datatype.xsd.Ma"
+"xLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxq\u0000~\u0000\u0010q\u0000~\u0000\u0018pq\u0000~\u0000\u001b\u0000\u0001sr\u0000\'co"
+"m.sun.msv.datatype.xsd.MinLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tminLength"
+"xq\u0000~\u0000\u0010q\u0000~\u0000\u0018pq\u0000~\u0000\u001b\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000$t\u0000\tminLength\u0000\u0000\u0000\u0001q\u0000~\u0000$t\u0000\tmaxLeng"
+"th\u0000\u0000\u0000\u00ffq\u0000~\u0000-sq\u0000~\u00000t\u0000\u000estring-derivedq\u0000~\u0000\u0018sq\u0000~\u00003ppsq\u0000~\u00005q\u0000~\u0000/pq"
+"\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u000bDESCRIPCIONq\u0000~\u0000\u0018sr\u0000\"com.sun.msv.gramm"
+"ar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramm"
+"ar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expre"
+"ssionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006pa"
+"rentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\u0005q\u0000~\u0000"
+"\nq\u0000~\u0000Iq\u0000~\u00004q\u0000~\u0000Sx"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                        super(context, "-------");
                    }

                    protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.RESULTADOTypeImpl.ERRORTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  3 :
                                    if (("DESCRIPCION" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    if (("CODIGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    break;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  2 :
                                    if (("CODIGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  5 :
                                    if (("DESCRIPCION" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  6 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  1 :
                                        eatText1(value);
                                        state = 2;
                                        return ;
                                    case  4 :
                                        eatText2(value);
                                        state = 5;
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _CODIGO = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _DESCRIPCION = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public class Unmarshaller
                extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                    super(context, "-------");
                }

                protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.RESULTADOTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  0 :
                                if (("RETORNO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  4 :
                                if (("CODIGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    _ERROR = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.RESULTADOTypeImpl.ERRORTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.RESULTADOTypeImpl.ERRORTypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                break;
                            case  3 :
                                if (("ERROR" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("RETORNO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  5 :
                                if (("ERROR" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  3 :
                                state = 6;
                                continue outer;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  3 :
                                state = 6;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  3 :
                                state = 6;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  6 :
                                    revertToParentFromText(value);
                                    return ;
                                case  1 :
                                    eatText1(value);
                                    state = 2;
                                    return ;
                                case  3 :
                                    state = 6;
                                    continue outer;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RETORNO = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_RETORNO = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public static class TRANSMITENTESTypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.TRANSMITENTESType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
        {

            protected com.sun.xml.bind.util.ListImpl _TRANSMITENTE;
            public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.TRANSMITENTESType.class);
            }

            protected com.sun.xml.bind.util.ListImpl _getTRANSMITENTE() {
                if (_TRANSMITENTE == null) {
                    _TRANSMITENTE = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _TRANSMITENTE;
            }

            public java.util.List getTRANSMITENTE() {
                return _getTRANSMITENTE();
            }

            public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.TRANSMITENTESTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_TRANSMITENTE == null)? 0 :_TRANSMITENTE.size());
                while (idx1 != len1) {
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "TRANSMITENTE");
                    int idx_0 = idx1;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TRANSMITENTE.get(idx_0 ++)), "TRANSMITENTE");
                    context.endNamespaceDecls();
                    int idx_1 = idx1;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TRANSMITENTE.get(idx_1 ++)), "TRANSMITENTE");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _TRANSMITENTE.get(idx1 ++)), "TRANSMITENTE");
                    context.endElement();
                }
            }

            public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_TRANSMITENTE == null)? 0 :_TRANSMITENTE.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_TRANSMITENTE == null)? 0 :_TRANSMITENTE.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REPLYType.TRANSMITENTESType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002"
+"L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000"
+"~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar.Sequen"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u0006pp\u0000sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000bppsq\u0000~\u0000\u0000sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000@org"
+".notariado.ancert.xml.plusvalias.liquidacion.TransmitenteTyp"
+"et\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000eppsq\u0000~\u0000"
+"\u0013q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLor"
+"g/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun"
+"/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.Qn"
+"ameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomic"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/su"
+"n/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.or"
+"g/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSp"
+"aceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd"
+".WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Exp"
+"ression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000\u001bcom.sun."
+"msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceU"
+"RIq\u0000~\u0000\u001expq\u0000~\u0000/q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/2001/XM"
+"LSchema-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\fTRANSMITENTEt\u00006http://ancert.n"
+"otariado.org/XML/Plusvalias/Liquidacionsr\u0000\"com.sun.msv.gramm"
+"ar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramm"
+"ar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expre"
+"ssionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006pa"
+"rentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\u000fq\u0000~\u0000"
+"\fq\u0000~\u0000\"q\u0000~\u0000\u0005q\u0000~\u0000\u0010x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                    super(context, "----");
                }

                protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.TRANSMITENTESTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  1 :
                                if (("DATOS_BASICOS" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    _getTRANSMITENTE().add(((org.notariado.ancert.xml.plusvalias.liquidacion.impl.TransmitenteTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.TransmitenteTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  0 :
                                if (("TRANSMITENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  3 :
                                if (("TRANSMITENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  2 :
                                if (("TRANSMITENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public class Unmarshaller
            extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                super(context, "-------------------------------------");
            }

            protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  12 :
                            if (("ACTO_JURIDICO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 13;
                                return ;
                            }
                            break;
                        case  25 :
                            if (("REPRESENTANTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _REPRESENTANTES = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.REPRESENTANTESTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.REPRESENTANTESTypeImpl.class), 26, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  36 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  34 :
                            if (("RETORNO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _RESULTADO = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.RESULTADOTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.RESULTADOTypeImpl.class), 35, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  6 :
                            if (("NOTARIO_AUTORIZANTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 7;
                                return ;
                            }
                            break;
                        case  22 :
                            if (("REFERENCIA_CATASTRAL" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _INMUEBLE = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.INMUEBLETypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.INMUEBLETypeImpl.class), 23, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  33 :
                            if (("RESULTADO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 34;
                                return ;
                            }
                            break;
                        case  3 :
                            if (("NOTARIO_TITULAR" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 4;
                                return ;
                            }
                            state = 33;
                            continue outer;
                        case  19 :
                            if (("ADQUIRENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _ADQUIRENTES = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.ADQUIRENTESTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.ADQUIRENTESTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  30 :
                            if (("DOCUMENTOS" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 31;
                                return ;
                            }
                            break;
                        case  15 :
                            if (("TRANSMITENTES" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 16;
                                return ;
                            }
                            break;
                        case  1 :
                            if (("APLICACION" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _CABECERA = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CabeceraTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CabeceraTypeImpl.class), 2, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  7 :
                            if (("CODIGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _NOTARIOAUTORIZANTE = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.NotarioTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.NotarioTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  13 :
                            if (("CODIGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _ACTOJURIDICO = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.ActoJuridicoTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.ActoJuridicoTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  10 :
                            if (("NUMERO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _PROTOCOLO = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.ProtocoloTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.ProtocoloTypeImpl.class), 11, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  27 :
                            if (("IMPORTE_TOTAL" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 28;
                                return ;
                            }
                            break;
                        case  31 :
                            if (("DOCUMENTO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _DOCUMENTOS = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.DOCUMENTOSTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.DOCUMENTOSTypeImpl.class), 32, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  0 :
                            if (("CABECERA" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            break;
                        case  16 :
                            if (("TRANSMITENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _TRANSMITENTES = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.TRANSMITENTESTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.TRANSMITENTESTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  9 :
                            if (("PROTOCOLO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 10;
                                return ;
                            }
                            break;
                        case  18 :
                            if (("ADQUIRENTES" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 19;
                                return ;
                            }
                            break;
                        case  21 :
                            if (("INMUEBLE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 22;
                                return ;
                            }
                            break;
                        case  24 :
                            if (("REPRESENTANTES" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 25;
                                return ;
                            }
                            state = 27;
                            continue outer;
                        case  4 :
                            if (("CODIGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _NOTARIOTITULAR = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.NotarioTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.NotarioTypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  32 :
                            if (("DOCUMENTOS" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 33;
                                return ;
                            }
                            break;
                        case  36 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            state = 33;
                            continue outer;
                        case  5 :
                            if (("NOTARIO_TITULAR" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                        case  2 :
                            if (("CABECERA" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  26 :
                            if (("REPRESENTANTES" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 27;
                                return ;
                            }
                            break;
                        case  8 :
                            if (("NOTARIO_AUTORIZANTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 9;
                                return ;
                            }
                            break;
                        case  23 :
                            if (("INMUEBLE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 24;
                                return ;
                            }
                            break;
                        case  20 :
                            if (("ADQUIRENTES" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 21;
                                return ;
                            }
                            break;
                        case  35 :
                            if (("RESULTADO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 36;
                                return ;
                            }
                            break;
                        case  14 :
                            if (("ACTO_JURIDICO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 15;
                                return ;
                            }
                            break;
                        case  29 :
                            if (("IMPORTE_TOTAL" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 30;
                                return ;
                            }
                            break;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  11 :
                            if (("PROTOCOLO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 12;
                                return ;
                            }
                            break;
                        case  17 :
                            if (("TRANSMITENTES" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 18;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  36 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            state = 33;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  36 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            state = 33;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  36 :
                                revertToParentFromText(value);
                                return ;
                            case  3 :
                                state = 33;
                                continue outer;
                            case  28 :
                                eatText1(value);
                                state = 29;
                                return ;
                            case  24 :
                                state = 27;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _IMPORTETOTAL = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public static class REQUESTTypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
    {

        protected org.notariado.ancert.xml.plusvalias.liquidacion.ActoJuridicoType _ACTOJURIDICO;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.NotarioType _NOTARIOAUTORIZANTE;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.ADQUIRENTESType _ADQUIRENTES;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.ProtocoloType _PROTOCOLO;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.REPRESENTANTESType _REPRESENTANTES;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.INMUEBLEType _INMUEBLE;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.CabeceraType _CABECERA;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.TRANSMITENTESType _TRANSMITENTES;
        protected org.notariado.ancert.xml.plusvalias.liquidacion.NotarioType _NOTARIOTITULAR;
        public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.class);
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.ActoJuridicoType getACTOJURIDICO() {
            return _ACTOJURIDICO;
        }

        public void setACTOJURIDICO(org.notariado.ancert.xml.plusvalias.liquidacion.ActoJuridicoType value) {
            _ACTOJURIDICO = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.NotarioType getNOTARIOAUTORIZANTE() {
            return _NOTARIOAUTORIZANTE;
        }

        public void setNOTARIOAUTORIZANTE(org.notariado.ancert.xml.plusvalias.liquidacion.NotarioType value) {
            _NOTARIOAUTORIZANTE = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.ADQUIRENTESType getADQUIRENTES() {
            return _ADQUIRENTES;
        }

        public void setADQUIRENTES(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.ADQUIRENTESType value) {
            _ADQUIRENTES = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.ProtocoloType getPROTOCOLO() {
            return _PROTOCOLO;
        }

        public void setPROTOCOLO(org.notariado.ancert.xml.plusvalias.liquidacion.ProtocoloType value) {
            _PROTOCOLO = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.REPRESENTANTESType getREPRESENTANTES() {
            return _REPRESENTANTES;
        }

        public void setREPRESENTANTES(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.REPRESENTANTESType value) {
            _REPRESENTANTES = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.INMUEBLEType getINMUEBLE() {
            return _INMUEBLE;
        }

        public void setINMUEBLE(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.INMUEBLEType value) {
            _INMUEBLE = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.CabeceraType getCABECERA() {
            return _CABECERA;
        }

        public void setCABECERA(org.notariado.ancert.xml.plusvalias.liquidacion.CabeceraType value) {
            _CABECERA = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.TRANSMITENTESType getTRANSMITENTES() {
            return _TRANSMITENTES;
        }

        public void setTRANSMITENTES(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.TRANSMITENTESType value) {
            _TRANSMITENTES = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.NotarioType getNOTARIOTITULAR() {
            return _NOTARIOTITULAR;
        }

        public void setNOTARIOTITULAR(org.notariado.ancert.xml.plusvalias.liquidacion.NotarioType value) {
            _NOTARIOTITULAR = value;
        }

        public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
            return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "CABECERA");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CABECERA), "CABECERA");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CABECERA), "CABECERA");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _CABECERA), "CABECERA");
            context.endElement();
            context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "NOTARIO_TITULAR");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NOTARIOTITULAR), "NOTARIOTITULAR");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NOTARIOTITULAR), "NOTARIOTITULAR");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _NOTARIOTITULAR), "NOTARIOTITULAR");
            context.endElement();
            context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "NOTARIO_AUTORIZANTE");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NOTARIOAUTORIZANTE), "NOTARIOAUTORIZANTE");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NOTARIOAUTORIZANTE), "NOTARIOAUTORIZANTE");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _NOTARIOAUTORIZANTE), "NOTARIOAUTORIZANTE");
            context.endElement();
            context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "PROTOCOLO");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PROTOCOLO), "PROTOCOLO");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PROTOCOLO), "PROTOCOLO");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _PROTOCOLO), "PROTOCOLO");
            context.endElement();
            context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "ACTO_JURIDICO");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ACTOJURIDICO), "ACTOJURIDICO");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ACTOJURIDICO), "ACTOJURIDICO");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ACTOJURIDICO), "ACTOJURIDICO");
            context.endElement();
            context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "TRANSMITENTES");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TRANSMITENTES), "TRANSMITENTES");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TRANSMITENTES), "TRANSMITENTES");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _TRANSMITENTES), "TRANSMITENTES");
            context.endElement();
            context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "ADQUIRENTES");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ADQUIRENTES), "ADQUIRENTES");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ADQUIRENTES), "ADQUIRENTES");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ADQUIRENTES), "ADQUIRENTES");
            context.endElement();
            context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "INMUEBLE");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _INMUEBLE), "INMUEBLE");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _INMUEBLE), "INMUEBLE");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _INMUEBLE), "INMUEBLE");
            context.endElement();
            if (_REPRESENTANTES!= null) {
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "REPRESENTANTES");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _REPRESENTANTES), "REPRESENTANTES");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _REPRESENTANTES), "REPRESENTANTES");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _REPRESENTANTES), "REPRESENTANTES");
                context.endElement();
            }
        }

        public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001e"
+"com.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclared"
+"AttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sr\u0000\u001d"
+"com.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun."
+"msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.U"
+"naryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080"
+"\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000exq\u0000~\u0000\u0003q\u0000~\u0000\u0019psr\u00002com.sun.ms"
+"v.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000"
+"~\u0000\u0018\u0001q\u0000~\u0000\u001dsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001d"
+"com.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gr"
+"ammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001eq\u0000~\u0000"
+"#sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalN"
+"amet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000%xq\u0000~\u0000 t\u0000<org.not"
+"ariado.ancert.xml.plusvalias.liquidacion.CabeceraTypet\u0000+http"
+"://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001aq\u0000~\u0000\u0019ps"
+"r\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxn"
+"g/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/uti"
+"l/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fname"
+"spaceUriq\u0000~\u0000%L\u0000\btypeNameq\u0000~\u0000%L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/da"
+"tatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/X"
+"MLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSp"
+"aceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$"
+"NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0019psr\u0000\u001bcom.sun.msv.util"
+".StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%x"
+"pq\u0000~\u00006q\u0000~\u00005sq\u0000~\u0000$t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-"
+"instanceq\u0000~\u0000#sq\u0000~\u0000$t\u0000\bCABECERAt\u00006http://ancert.notariado.org"
+"/XML/Plusvalias/Liquidacionsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0013p"
+"psq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000;org.notaria"
+"do.ancert.xml.plusvalias.liquidacion.NotarioTypeq\u0000~\u0000(sq\u0000~\u0000\u0013p"
+"psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000.q\u0000~\u0000>q\u0000~\u0000#sq\u0000~\u0000$t\u0000\u000fNOTARIO_TITULARq\u0000~\u0000Csq\u0000"
+"~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000\u001d"
+"q\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$q\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000.q\u0000~\u0000>q\u0000~\u0000"
+"#sq\u0000~\u0000$t\u0000\u0013NOTARIO_AUTORIZANTEq\u0000~\u0000Csq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000"
+"sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000=org."
+"notariado.ancert.xml.plusvalias.liquidacion.ProtocoloTypeq\u0000~"
+"\u0000(sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000.q\u0000~\u0000>q\u0000~\u0000#sq\u0000~\u0000$t\u0000\tPROTOCOLOq\u0000~\u0000C"
+"sq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000"
+"~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000@org.notariado.ancert.xml.plusvalias.li"
+"quidacion.ActoJuridicoTypeq\u0000~\u0000(sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000.q\u0000~\u0000"
+">q\u0000~\u0000#sq\u0000~\u0000$t\u0000\rACTO_JURIDICOq\u0000~\u0000Csq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000s"
+"q\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000dorg.n"
+"otariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIO"
+"NType.REQUESTType.TRANSMITENTESTypeq\u0000~\u0000(sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001aq\u0000~\u0000\u0019p"
+"q\u0000~\u0000.q\u0000~\u0000>q\u0000~\u0000#sq\u0000~\u0000$t\u0000\rTRANSMITENTESq\u0000~\u0000Csq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000pps"
+"q\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000"
+"$t\u0000borg.notariado.ancert.xml.plusvalias.liquidacion.CALCULOL"
+"IQUIDACIONType.REQUESTType.ADQUIRENTESTypeq\u0000~\u0000(sq\u0000~\u0000\u0013ppsq\u0000~\u0000"
+"\u001aq\u0000~\u0000\u0019pq\u0000~\u0000.q\u0000~\u0000>q\u0000~\u0000#sq\u0000~\u0000$t\u0000\u000bADQUIRENTESq\u0000~\u0000Csq\u0000~\u0000\rpp\u0000sq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#"
+"sq\u0000~\u0000$t\u0000_org.notariado.ancert.xml.plusvalias.liquidacion.CAL"
+"CULOLIQUIDACIONType.REQUESTType.INMUEBLETypeq\u0000~\u0000(sq\u0000~\u0000\u0013ppsq\u0000"
+"~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000.q\u0000~\u0000>q\u0000~\u0000#sq\u0000~\u0000$t\u0000\bINMUEBLEq\u0000~\u0000Csq\u0000~\u0000\u0013ppsq\u0000~\u0000\r"
+"q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000"
+"\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000eorg.notariado.ancert.xml.plusvalias.liqu"
+"idacion.CALCULOLIQUIDACIONType.REQUESTType.REPRESENTANTESTyp"
+"eq\u0000~\u0000(sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000.q\u0000~\u0000>q\u0000~\u0000#sq\u0000~\u0000$t\u0000\u000eREPRESENTA"
+"NTESq\u0000~\u0000Cq\u0000~\u0000#sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedH"
+"ash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef"
+"\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gramm"
+"ar/ExpressionPool;xp\u0000\u0000\u0000-\u0001pq\u0000~\u0000_q\u0000~\u0000kq\u0000~\u0000wq\u0000~\u0000\u0083q\u0000~\u0000\u008fq\u0000~\u0000\u009cq\u0000~\u0000"
+"\fq\u0000~\u0000\u0006q\u0000~\u0000\u0097q\u0000~\u0000\u0007q\u0000~\u0000\u0005q\u0000~\u0000\u0014q\u0000~\u0000Gq\u0000~\u0000Sq\u0000~\u0000^q\u0000~\u0000jq\u0000~\u0000vq\u0000~\u0000\u0082q\u0000~\u0000"
+"\u008eq\u0000~\u0000\u009bq\u0000~\u0000\tq\u0000~\u0000\u0011q\u0000~\u0000Eq\u0000~\u0000Qq\u0000~\u0000\\q\u0000~\u0000hq\u0000~\u0000tq\u0000~\u0000\u0080q\u0000~\u0000\u008cq\u0000~\u0000\u0099q\u0000~\u0000"
+"\bq\u0000~\u0000)q\u0000~\u0000Lq\u0000~\u0000Wq\u0000~\u0000cq\u0000~\u0000oq\u0000~\u0000{q\u0000~\u0000\nq\u0000~\u0000\u0087q\u0000~\u0000\u0093q\u0000~\u0000\u00a0q\u0000~\u0000\u000bq\u0000~\u0000"
+"\u0017q\u0000~\u0000Hq\u0000~\u0000Tx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class ADQUIRENTESTypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.ADQUIRENTESType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
        {

            protected com.sun.xml.bind.util.ListImpl _ADQUIRENTE;
            public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.ADQUIRENTESType.class);
            }

            protected com.sun.xml.bind.util.ListImpl _getADQUIRENTE() {
                if (_ADQUIRENTE == null) {
                    _ADQUIRENTE = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _ADQUIRENTE;
            }

            public java.util.List getADQUIRENTE() {
                return _getADQUIRENTE();
            }

            public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.ADQUIRENTESTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_ADQUIRENTE == null)? 0 :_ADQUIRENTE.size());
                while (idx1 != len1) {
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "ADQUIRENTE");
                    int idx_0 = idx1;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ADQUIRENTE.get(idx_0 ++)), "ADQUIRENTE");
                    context.endNamespaceDecls();
                    int idx_1 = idx1;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ADQUIRENTE.get(idx_1 ++)), "ADQUIRENTE");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _ADQUIRENTE.get(idx1 ++)), "ADQUIRENTE");
                    context.endElement();
                }
            }

            public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_ADQUIRENTE == null)? 0 :_ADQUIRENTE.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_ADQUIRENTE == null)? 0 :_ADQUIRENTE.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.ADQUIRENTESType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002"
+"L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000"
+"~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar.Sequen"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u0006pp\u0000sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000bppsq\u0000~\u0000\u0000sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000>org"
+".notariado.ancert.xml.plusvalias.liquidacion.AdquirenteTypet"
+"\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000eppsq\u0000~\u0000\u0013q"
+"\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/"
+"relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/m"
+"sv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.Qnam"
+"eType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\fnamespaceUriq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/"
+"msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/"
+"2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpac"
+"eProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.W"
+"hiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expre"
+"ssion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.ms"
+"v.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURI"
+"q\u0000~\u0000\u001expq\u0000~\u0000/q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLS"
+"chema-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\nADQUIRENTEt\u00006http://ancert.notar"
+"iado.org/XML/Plusvalias/Liquidacionsr\u0000\"com.sun.msv.grammar.E"
+"xpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/E"
+"xpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressio"
+"nPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parent"
+"t\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\u000fq\u0000~\u0000\fq\u0000~"
+"\u0000\"q\u0000~\u0000\u0005q\u0000~\u0000\u0010x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                    super(context, "----");
                }

                protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.ADQUIRENTESTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  1 :
                                if (("DATOS_BASICOS" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    _getADQUIRENTE().add(((org.notariado.ancert.xml.plusvalias.liquidacion.impl.AdquirenteTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.AdquirenteTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  3 :
                                if (("ADQUIRENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  0 :
                                if (("ADQUIRENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("ADQUIRENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public static class INMUEBLETypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.INMUEBLEType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
        {

            protected org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.INMUEBLEType.DIRECCIONType _DIRECCION;
            protected java.lang.String _REFERENCIACATASTRAL;
            public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.INMUEBLEType.class);
            }

            public org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.INMUEBLEType.DIRECCIONType getDIRECCION() {
                return _DIRECCION;
            }

            public void setDIRECCION(org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.INMUEBLEType.DIRECCIONType value) {
                _DIRECCION = value;
            }

            public java.lang.String getREFERENCIACATASTRAL() {
                return _REFERENCIACATASTRAL;
            }

            public void setREFERENCIACATASTRAL(java.lang.String value) {
                _REFERENCIACATASTRAL = value;
            }

            public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.INMUEBLETypeImpl.Unmarshaller(context);
            }

            public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "REFERENCIA_CATASTRAL");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _REFERENCIACATASTRAL), "REFERENCIACATASTRAL");
                } catch (java.lang.Exception e) {
                    org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "DIRECCION");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DIRECCION), "DIRECCION");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DIRECCION), "DIRECCION");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _DIRECCION), "DIRECCION");
                context.endElement();
            }

            public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.INMUEBLEType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
+"ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
+"xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
+"aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.s"
+"un.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/dataty"
+"pe/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/String"
+"Pair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.LengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001I\u0000\u0006lengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueC"
+"onstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTy"
+"peWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000"
+"\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconc"
+"reteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNa"
+"met\u0000\u0012Ljava/lang/String;xr\u0000\'com.sun.msv.datatype.xsd.XSDataty"
+"peImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u0014L\u0000\btypeNameq\u0000~\u0000\u0014L\u0000\nwhit"
+"eSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u00006"
+"http://ancert.notariado.org/XML/Plusvalias/Liquidaciont\u0000\u0018REF"
+"ERENCIA_CATASTRALTypesr\u00005com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000%com.sun.msv.datatype.xsd"
+".PatternFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001[\u0000\bpatternst\u0000\u0013[Ljava/lang/String;xr\u0000"
+";com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacet"
+"T\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u0011q\u0000~\u0000\u0018t\u0000\nSTRINGTypeq\u0000~\u0000\u001c\u0000\u0000sr\u0000#com.sun.msv.da"
+"tatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun."
+"msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv"
+".datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015t\u0000 http://www.w3."
+"org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000\u001c\u0001q\u0000~\u0000%t\u0000\u0007patternur\u0000\u0013[Ljava.l"
+"ang.String;\u00ad\u00d2V\u00e7\u00e9\u001d{G\u0002\u0000\u0000xp\u0000\u0000\u0000\u0001t\u0000\n[^\\r\\n\\t]*q\u0000~\u0000%t\u0000\u0006length\u0000\u0000\u0000\u0014s"
+"r\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom."
+"sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0014L\u0000\fnamesp"
+"aceURIq\u0000~\u0000\u0014xpq\u0000~\u0000\u0019q\u0000~\u0000\u0018sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u00000psq\u0000~\u0000\u000bppsr\u0000\"com.su"
+"n.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000#q\u0000~\u0000&t\u0000\u0005QNamesr"
+"\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000.sq\u0000~\u00001q\u0000~\u0000:q\u0000~\u0000&sr\u0000#com.sun.msv.grammar.Sim"
+"pleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0014L\u0000\fnamespaceURIq\u0000~\u0000\u0014"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http"
+"://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar"
+".Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000/\u0001q\u0000~\u0000Dsq"
+"\u0000~\u0000>t\u0000\u0014REFERENCIA_CATASTRALq\u0000~\u0000\u0018sq\u0000~\u0000\u0006pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006pp\u0000sq"
+"\u0000~\u00003ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom"
+".sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u00000ps"
+"q\u0000~\u00005q\u0000~\u00000psr\u00002com.sun.msv.grammar.Expression$AnyStringExpre"
+"ssion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000Eq\u0000~\u0000Qsr\u0000 com.sun.msv.grammar.AnyN"
+"ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000?q\u0000~\u0000Dsq\u0000~\u0000>t\u0000morg.notariado.ancert."
+"xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTTyp"
+"e.INMUEBLEType.DIRECCIONTypet\u0000+http://java.sun.com/jaxb/xjc/"
+"dummy-elementssq\u0000~\u00003ppsq\u0000~\u00005q\u0000~\u00000pq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\tDI"
+"RECCIONq\u0000~\u0000\u0018sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHas"
+"h;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed"
+"\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar"
+"/ExpressionPool;xp\u0000\u0000\u0000\u0007\u0001pq\u0000~\u0000Kq\u0000~\u0000Iq\u0000~\u0000\u0005q\u0000~\u00004q\u0000~\u0000Wq\u0000~\u0000\nq\u0000~\u0000Nx"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class DIRECCIONTypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.INMUEBLEType.DIRECCIONType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
            {

                protected java.lang.String _INEPROVINCIA;
                protected java.lang.String _INEMUNICIPIO;
                public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.INMUEBLEType.DIRECCIONType.class);
                }

                public java.lang.String getINEPROVINCIA() {
                    return _INEPROVINCIA;
                }

                public void setINEPROVINCIA(java.lang.String value) {
                    _INEPROVINCIA = value;
                }

                public java.lang.String getINEMUNICIPIO() {
                    return _INEMUNICIPIO;
                }

                public void setINEMUNICIPIO(java.lang.String value) {
                    _INEMUNICIPIO = value;
                }

                public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                    return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.INMUEBLETypeImpl.DIRECCIONTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "INE_PROVINCIA");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _INEPROVINCIA), "INEPROVINCIA");
                    } catch (java.lang.Exception e) {
                        org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "INE_MUNICIPIO");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _INEMUNICIPIO), "INEMUNICIPIO");
                    } catch (java.lang.Exception e) {
                        org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }

                public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.INMUEBLEType.DIRECCIONType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
+"ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
+"xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
+"aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.s"
+"un.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/dataty"
+"pe/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/String"
+"Pair;xq\u0000~\u0000\u0003ppsr\u0000%com.sun.msv.datatype.xsd.PatternFacet\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001[\u0000\bpatternst\u0000\u0013[Ljava/lang/String;xr\u0000;com.sun.msv.dataty"
+"pe.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com."
+"sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetF"
+"ixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype"
+"/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/"
+"xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lang/String;xr\u0000\'com.su"
+"n.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq"
+"\u0000~\u0000\u0015L\u0000\btypeNameq\u0000~\u0000\u0015L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xs"
+"d/WhiteSpaceProcessor;xpt\u00006http://ancert.notariado.org/XML/P"
+"lusvalias/Liquidaciont\u0000\u0014CODIGO_PROVINCIATypesr\u00005com.sun.msv."
+"datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#c"
+"om.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysVali"
+"dxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0016t\u0000 h"
+"ttp://www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000\u001d\u0001q\u0000~\u0000!t\u0000\u0007patter"
+"nur\u0000\u0013[Ljava.lang.String;\u00ad\u00d2V\u00e7\u00e9\u001d{G\u0002\u0000\u0000xp\u0000\u0000\u0000\u0001t\u0000\b[0-9]{2}sr\u00000com."
+"sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv"
+".util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0015L\u0000\fnamespaceURIq"
+"\u0000~\u0000\u0015xpq\u0000~\u0000\u001aq\u0000~\u0000\u0019sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000+psq\u0000~\u0000\u000bppsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~\u0000\"t\u0000\u0005QNamesr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000\u001cq\u0000~\u0000)sq\u0000~\u0000,q\u0000~\u00005q\u0000~\u0000\"sr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0015L\u0000\fnamespaceURIq\u0000~\u0000\u0015xr\u0000\u001dcom"
+".sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www."
+"w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000*\u0001q\u0000~\u0000?sq\u0000~\u00009t\u0000\r"
+"INE_PROVINCIAq\u0000~\u0000\u0019sq\u0000~\u0000\u0006pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bppsq\u0000~\u0000\u000fq\u0000~\u0000\u0019t\u0000\u0014COD"
+"IGO_MUNICIPIOTypeq\u0000~\u0000\u001d\u0000\u0000q\u0000~\u0000!q\u0000~\u0000!q\u0000~\u0000$uq\u0000~\u0000%\u0000\u0000\u0000\u0001t\u0000\b[0-9]{4}"
+"q\u0000~\u0000)sq\u0000~\u0000,q\u0000~\u0000Gq\u0000~\u0000\u0019sq\u0000~\u0000.ppsq\u0000~\u00000q\u0000~\u0000+pq\u0000~\u00002q\u0000~\u0000;q\u0000~\u0000?sq\u0000~"
+"\u00009t\u0000\rINE_MUNICIPIOq\u0000~\u0000\u0019sr\u0000\"com.sun.msv.grammar.ExpressionPoo"
+"l\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPoo"
+"l$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Closed"
+"Hash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/"
+"msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\nq\u0000~\u0000\u0005q\u0000~\u0000Dq\u0000~\u0000/q\u0000~\u0000K"
+"x"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                        super(context, "-------");
                    }

                    protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.INMUEBLETypeImpl.DIRECCIONTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    if (("INE_PROVINCIA" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    if (("INE_MUNICIPIO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  2 :
                                    if (("INE_PROVINCIA" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  5 :
                                    if (("INE_MUNICIPIO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  4 :
                                        eatText1(value);
                                        state = 5;
                                        return ;
                                    case  6 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  1 :
                                        eatText2(value);
                                        state = 2;
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _INEMUNICIPIO = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _INEPROVINCIA = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public class Unmarshaller
                extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                    super(context, "-------");
                }

                protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.INMUEBLETypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("REFERENCIA_CATASTRAL" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  3 :
                                if (("DIRECCION" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 4;
                                    return ;
                                }
                                break;
                            case  6 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  4 :
                                if (("INE_PROVINCIA" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    _DIRECCION = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.INMUEBLETypeImpl.DIRECCIONTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.INMUEBLETypeImpl.DIRECCIONTypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  5 :
                                if (("DIRECCION" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  2 :
                                if (("REFERENCIA_CATASTRAL" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  6 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  1 :
                                    eatText1(value);
                                    state = 2;
                                    return ;
                                case  6 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _REFERENCIACATASTRAL = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public static class REPRESENTANTESTypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.REPRESENTANTESType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
        {

            protected com.sun.xml.bind.util.ListImpl _REPRESENTANTE;
            public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.REPRESENTANTESType.class);
            }

            protected com.sun.xml.bind.util.ListImpl _getREPRESENTANTE() {
                if (_REPRESENTANTE == null) {
                    _REPRESENTANTE = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _REPRESENTANTE;
            }

            public java.util.List getREPRESENTANTE() {
                return _getREPRESENTANTE();
            }

            public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.REPRESENTANTESTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_REPRESENTANTE == null)? 0 :_REPRESENTANTE.size());
                while (idx1 != len1) {
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "REPRESENTANTE");
                    int idx_0 = idx1;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _REPRESENTANTE.get(idx_0 ++)), "REPRESENTANTE");
                    context.endNamespaceDecls();
                    int idx_1 = idx1;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _REPRESENTANTE.get(idx_1 ++)), "REPRESENTANTE");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _REPRESENTANTE.get(idx1 ++)), "REPRESENTANTE");
                    context.endElement();
                }
            }

            public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_REPRESENTANTE == null)? 0 :_REPRESENTANTE.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_REPRESENTANTE == null)? 0 :_REPRESENTANTE.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.REPRESENTANTESType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002"
+"L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000"
+"~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar.Sequen"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u0006pp\u0000sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000bppsq\u0000~\u0000\u0000sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000:org"
+".notariado.ancert.xml.plusvalias.liquidacion.SujetoTypet\u0000+ht"
+"tp://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000eppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012"
+"psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/rela"
+"xng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/u"
+"til/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fna"
+"mespaceUriq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/"
+"datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001"
+"/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePro"
+"cessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.White"
+"SpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressio"
+"n$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.ut"
+"il.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000"
+"\u001expq\u0000~\u0000/q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchem"
+"a-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\rREPRESENTANTEt\u00006http://ancert.notari"
+"ado.org/XML/Plusvalias/Liquidacionsr\u0000\"com.sun.msv.grammar.Ex"
+"pressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Ex"
+"pressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expression"
+"Pool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt"
+"\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\u000fq\u0000~\u0000\fq\u0000~\u0000"
+"\"q\u0000~\u0000\u0005q\u0000~\u0000\u0010x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                    super(context, "----");
                }

                protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.REPRESENTANTESTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("REPRESENTANTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  1 :
                                if (("IDENTIFICADOR" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    _getREPRESENTANTE().add(((org.notariado.ancert.xml.plusvalias.liquidacion.impl.SujetoTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.SujetoTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  3 :
                                if (("REPRESENTANTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("REPRESENTANTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public static class TRANSMITENTESTypeImpl implements org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.TRANSMITENTESType, com.sun.xml.bind.JAXBObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallableObject, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializable, org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.ValidatableObject
        {

            protected com.sun.xml.bind.util.ListImpl _TRANSMITENTE;
            public final static java.lang.Class version = (org.notariado.ancert.xml.plusvalias.liquidacion.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.TRANSMITENTESType.class);
            }

            protected com.sun.xml.bind.util.ListImpl _getTRANSMITENTE() {
                if (_TRANSMITENTE == null) {
                    _TRANSMITENTE = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _TRANSMITENTE;
            }

            public java.util.List getTRANSMITENTE() {
                return _getTRANSMITENTE();
            }

            public org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                return new org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.TRANSMITENTESTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_TRANSMITENTE == null)? 0 :_TRANSMITENTE.size());
                while (idx1 != len1) {
                    context.startElement("http://ancert.notariado.org/XML/Plusvalias/Liquidacion", "TRANSMITENTE");
                    int idx_0 = idx1;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TRANSMITENTE.get(idx_0 ++)), "TRANSMITENTE");
                    context.endNamespaceDecls();
                    int idx_1 = idx1;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TRANSMITENTE.get(idx_1 ++)), "TRANSMITENTE");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _TRANSMITENTE.get(idx1 ++)), "TRANSMITENTE");
                    context.endElement();
                }
            }

            public void serializeAttributes(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_TRANSMITENTE == null)? 0 :_TRANSMITENTE.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public void serializeURIs(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_TRANSMITENTE == null)? 0 :_TRANSMITENTE.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (org.notariado.ancert.xml.plusvalias.liquidacion.CALCULOLIQUIDACIONType.REQUESTType.TRANSMITENTESType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002"
+"L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000"
+"~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar.Sequen"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u0006pp\u0000sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000bppsq\u0000~\u0000\u0000sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000@org"
+".notariado.ancert.xml.plusvalias.liquidacion.TransmitenteTyp"
+"et\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000eppsq\u0000~\u0000"
+"\u0013q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLor"
+"g/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun"
+"/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.Qn"
+"ameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomic"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/su"
+"n/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.or"
+"g/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSp"
+"aceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd"
+".WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Exp"
+"ression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000\u001bcom.sun."
+"msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceU"
+"RIq\u0000~\u0000\u001expq\u0000~\u0000/q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/2001/XM"
+"LSchema-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\fTRANSMITENTEt\u00006http://ancert.n"
+"otariado.org/XML/Plusvalias/Liquidacionsr\u0000\"com.sun.msv.gramm"
+"ar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramm"
+"ar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expre"
+"ssionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006pa"
+"rentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\u000fq\u0000~\u0000"
+"\fq\u0000~\u0000\"q\u0000~\u0000\u0005q\u0000~\u0000\u0010x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                    super(context, "----");
                }

                protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.TRANSMITENTESTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  1 :
                                if (("DATOS_BASICOS" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    _getTRANSMITENTE().add(((org.notariado.ancert.xml.plusvalias.liquidacion.impl.TransmitenteTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.TransmitenteTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  3 :
                                if (("TRANSMITENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  0 :
                                if (("TRANSMITENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("TRANSMITENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public class Unmarshaller
            extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
                super(context, "----------------------------");
            }

            protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  13 :
                            if (("CODIGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _ACTOJURIDICO = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.ActoJuridicoTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.ActoJuridicoTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  21 :
                            if (("INMUEBLE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 22;
                                return ;
                            }
                            break;
                        case  9 :
                            if (("PROTOCOLO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 10;
                                return ;
                            }
                            break;
                        case  3 :
                            if (("NOTARIO_TITULAR" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 4;
                                return ;
                            }
                            break;
                        case  16 :
                            if (("TRANSMITENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _TRANSMITENTES = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.TRANSMITENTESTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.TRANSMITENTESTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  15 :
                            if (("TRANSMITENTES" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 16;
                                return ;
                            }
                            break;
                        case  24 :
                            if (("REPRESENTANTES" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 25;
                                return ;
                            }
                            state = 27;
                            continue outer;
                        case  18 :
                            if (("ADQUIRENTES" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 19;
                                return ;
                            }
                            break;
                        case  10 :
                            if (("NUMERO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _PROTOCOLO = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.ProtocoloTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.ProtocoloTypeImpl.class), 11, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  7 :
                            if (("CODIGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _NOTARIOAUTORIZANTE = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.NotarioTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.NotarioTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  19 :
                            if (("ADQUIRENTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _ADQUIRENTES = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.ADQUIRENTESTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.ADQUIRENTESTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  0 :
                            if (("CABECERA" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            break;
                        case  12 :
                            if (("ACTO_JURIDICO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 13;
                                return ;
                            }
                            break;
                        case  4 :
                            if (("CODIGO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _NOTARIOTITULAR = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.NotarioTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.NotarioTypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  1 :
                            if (("APLICACION" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _CABECERA = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CabeceraTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CabeceraTypeImpl.class), 2, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  25 :
                            if (("REPRESENTANTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _REPRESENTANTES = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.REPRESENTANTESTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.REPRESENTANTESTypeImpl.class), 26, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  22 :
                            if (("REFERENCIA_CATASTRAL" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                _INMUEBLE = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.INMUEBLETypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.INMUEBLETypeImpl.class), 23, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  6 :
                            if (("NOTARIO_AUTORIZANTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 7;
                                return ;
                            }
                            break;
                        case  27 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  5 :
                            if (("NOTARIO_TITULAR" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                        case  23 :
                            if (("INMUEBLE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 24;
                                return ;
                            }
                            break;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  26 :
                            if (("REPRESENTANTES" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 27;
                                return ;
                            }
                            break;
                        case  11 :
                            if (("PROTOCOLO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 12;
                                return ;
                            }
                            break;
                        case  17 :
                            if (("TRANSMITENTES" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 18;
                                return ;
                            }
                            break;
                        case  20 :
                            if (("ADQUIRENTES" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 21;
                                return ;
                            }
                            break;
                        case  8 :
                            if (("NOTARIO_AUTORIZANTE" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 9;
                                return ;
                            }
                            break;
                        case  2 :
                            if (("CABECERA" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  14 :
                            if (("ACTO_JURIDICO" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                                context.popAttributes();
                                state = 15;
                                return ;
                            }
                            break;
                        case  27 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  24 :
                            state = 27;
                            continue outer;
                        case  27 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  24 :
                            state = 27;
                            continue outer;
                        case  27 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  24 :
                                state = 27;
                                continue outer;
                            case  27 :
                                revertToParentFromText(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context) {
            super(context, "------");
        }

        protected Unmarshaller(org.notariado.ancert.xml.plusvalias.liquidacion.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("REQUEST" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        if (("REPLY" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  1 :
                        if (("CABECERA" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                            _REPLY = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REPLYTypeImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  4 :
                        if (("CABECERA" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                            _REQUEST = ((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl) spawnChildFromEnterElement((org.notariado.ancert.xml.plusvalias.liquidacion.impl.CALCULOLIQUIDACIONTypeImpl.REQUESTTypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        if (("REQUEST" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("REPLY" == ___local)&&("http://ancert.notariado.org/XML/Plusvalias/Liquidacion" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
